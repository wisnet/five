{"version":3,"sources":["/Users/riad/Workspace/a8c/gutenberg/packages/components/src/focusable-iframe/index.js"],"names":["window","FocusEvent","FocusableIframe","props","arguments","checkFocus","bind","node","iframeRef","iframe","current","document","activeElement","focusEvent","bubbles","dispatchEvent","onFocus","Component","blur"],"mappings":";;;;;;;;;AAQA;;;;;;;;;;;;;;;;AALA;;AAMA;;AATA;;;;AAKA;;;;AAMA;;;cAIuBA,M;IAAfC,U,WAAAA,U;;IAEFC,e;;;;;AACL,2BAAaC,KAAb,EAAqB;AAAA;;AAAA;AACpB,sHAAUC,SAAV;AAEA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,mFAAlB;AAEA,UAAKC,IAAL,GAAYJ,KAAK,CAACK,SAAN,IAAmB,yBAA/B;AALoB;AAMpB;AAED;;;;;;;;iCAIa;AACZ,UAAMC,MAAM,GAAG,KAAKF,IAAL,CAAUG,OAAzB;;AAEA,UAAKC,QAAQ,CAACC,aAAT,KAA2BH,MAAhC,EAAyC;AACxC;AACA;;AAED,UAAMI,UAAU,GAAG,IAAIZ,UAAJ,CAAgB,OAAhB,EAAyB;AAAEa,QAAAA,OAAO,EAAE;AAAX,OAAzB,CAAnB;AACAL,MAAAA,MAAM,CAACM,aAAP,CAAsBF,UAAtB;AARY,UAUJG,OAVI,GAUQ,KAAKb,KAVb,CAUJa,OAVI;;AAWZ,UAAKA,OAAL,EAAe;AACdA,QAAAA,OAAO,CAAEH,UAAF,CAAP;AACA;AACD;;;6BAEQ;AACR;AACA;AACA;;AAEA;AACA,aACC;AACC,QAAA,GAAG,EAAG,KAAKN;AADZ,SAEM,kBAAM,KAAKJ,KAAX,EAAkB,CAAE,WAAF,EAAe,SAAf,CAAlB,CAFN,EADD;AAMA;AACA;;;EA1C4Bc,kB;;eA6Cf,+BAAkB;AAChCC,EAAAA,IAAI,EAAE;AAD0B,CAAlB,EAEVhB,eAFU,C","sourcesContent":["/**\n * External dependencies\n */\nimport { omit } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component, createRef } from '@wordpress/element';\nimport { withGlobalEvents } from '@wordpress/compose';\n\n/**\n * Browser dependencies\n */\n\nconst { FocusEvent } = window;\n\nclass FocusableIframe extends Component {\n\tconstructor( props ) {\n\t\tsuper( ...arguments );\n\n\t\tthis.checkFocus = this.checkFocus.bind( this );\n\n\t\tthis.node = props.iframeRef || createRef();\n\t}\n\n\t/**\n\t * Checks whether the iframe is the activeElement, inferring that it has\n\t * then received focus, and calls the `onFocus` prop callback.\n\t */\n\tcheckFocus() {\n\t\tconst iframe = this.node.current;\n\n\t\tif ( document.activeElement !== iframe ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst focusEvent = new FocusEvent( 'focus', { bubbles: true } );\n\t\tiframe.dispatchEvent( focusEvent );\n\n\t\tconst { onFocus } = this.props;\n\t\tif ( onFocus ) {\n\t\t\tonFocus( focusEvent );\n\t\t}\n\t}\n\n\trender() {\n\t\t// Disable reason: The rendered iframe is a pass-through component,\n\t\t// assigning props inherited from the rendering parent. It's the\n\t\t// responsibility of the parent to assign a title.\n\n\t\t/* eslint-disable jsx-a11y/iframe-has-title */\n\t\treturn (\n\t\t\t<iframe\n\t\t\t\tref={ this.node }\n\t\t\t\t{ ...omit( this.props, [ 'iframeRef', 'onFocus' ] ) }\n\t\t\t/>\n\t\t);\n\t\t/* eslint-enable jsx-a11y/iframe-has-title */\n\t}\n}\n\nexport default withGlobalEvents( {\n\tblur: 'checkFocus',\n} )( FocusableIframe );\n"]}