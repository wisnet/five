{"version":3,"sources":["/Users/riad/Workspace/a8c/gutenberg/packages/compose/src/create-higher-order-component/index.js"],"names":["camelCase","upperFirst","createHigherOrderComponent","mapComponentToEnhancedComponent","modifierName","OriginalComponent","EnhancedComponent","displayName","name"],"mappings":"AAAA;;;AAGA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,QAAtC;AAEA;;;;;;;;;;;;AAWA,SAASC,0BAAT,CAAqCC,+BAArC,EAAsEC,YAAtE,EAAqF;AACpF,SAAO,UAAEC,iBAAF,EAAyB;AAC/B,QAAMC,iBAAiB,GAAGH,+BAA+B,CAAEE,iBAAF,CAAzD;AAD+B,gCAEiCA,iBAFjC,CAEvBE,WAFuB;AAAA,QAEvBA,WAFuB,sCAETF,iBAAiB,CAACG,IAAlB,IAA0B,WAFjB;AAG/BF,IAAAA,iBAAiB,CAACC,WAAlB,aAAoCN,UAAU,CAAED,SAAS,CAAEI,YAAF,CAAX,CAA9C,cAAiFG,WAAjF;AAEA,WAAOD,iBAAP;AACA,GAND;AAOA;;AAED,eAAeJ,0BAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { camelCase, upperFirst } from 'lodash';\n\n/**\n * Given a function mapping a component to an enhanced component and modifier\n * name, returns the enhanced component augmented with a generated displayName.\n *\n * @param {Function} mapComponentToEnhancedComponent Function mapping component\n *                                                   to enhanced component.\n * @param {string}   modifierName                    Seed name from which to\n *                                                   generated display name.\n *\n * @return {WPComponent} Component class with generated display name assigned.\n */\nfunction createHigherOrderComponent( mapComponentToEnhancedComponent, modifierName ) {\n\treturn ( OriginalComponent ) => {\n\t\tconst EnhancedComponent = mapComponentToEnhancedComponent( OriginalComponent );\n\t\tconst { displayName = OriginalComponent.name || 'Component' } = OriginalComponent;\n\t\tEnhancedComponent.displayName = `${ upperFirst( camelCase( modifierName ) ) }(${ displayName })`;\n\n\t\treturn EnhancedComponent;\n\t};\n}\n\nexport default createHigherOrderComponent;\n"]}