{"version":3,"sources":["/Users/riad/Workspace/a8c/gutenberg/packages/rich-text/src/insert.js"],"names":["create","normaliseFormats","insert","valueToInsert","formats","text","start","end","startIndex","endIndex","index","length","slice","concat"],"mappings":"AAAA;;;AAIA,SAASA,MAAT,QAAuB,UAAvB;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AAEA;;;;;;;;;;;;;;AAaA,OAAO,SAASC,MAAT,OAENC,aAFM,EAKL;AAAA,MAJCC,OAID,QAJCA,OAID;AAAA,MAJUC,IAIV,QAJUA,IAIV;AAAA,MAJgBC,KAIhB,QAJgBA,KAIhB;AAAA,MAJuBC,GAIvB,QAJuBA,GAIvB;AAAA,MAFDC,UAEC,uEAFYF,KAEZ;AAAA,MADDG,QACC,uEADUF,GACV;;AACD,MAAK,OAAOJ,aAAP,KAAyB,QAA9B,EAAyC;AACxCA,IAAAA,aAAa,GAAGH,MAAM,CAAE;AAAEK,MAAAA,IAAI,EAAEF;AAAR,KAAF,CAAtB;AACA;;AAED,MAAMO,KAAK,GAAGF,UAAU,GAAGL,aAAa,CAACE,IAAd,CAAmBM,MAA9C;AAEA,SAAOV,gBAAgB,CAAE;AACxBG,IAAAA,OAAO,EAAEA,OAAO,CAACQ,KAAR,CAAe,CAAf,EAAkBJ,UAAlB,EAA+BK,MAA/B,CAAuCV,aAAa,CAACC,OAArD,EAA8DA,OAAO,CAACQ,KAAR,CAAeH,QAAf,CAA9D,CADe;AAExBJ,IAAAA,IAAI,EAAEA,IAAI,CAACO,KAAL,CAAY,CAAZ,EAAeJ,UAAf,IAA8BL,aAAa,CAACE,IAA5C,GAAmDA,IAAI,CAACO,KAAL,CAAYH,QAAZ,CAFjC;AAGxBH,IAAAA,KAAK,EAAEI,KAHiB;AAIxBH,IAAAA,GAAG,EAAEG;AAJmB,GAAF,CAAvB;AAMA","sourcesContent":["/**\n * Internal dependencies\n */\n\nimport { create } from './create';\nimport { normaliseFormats } from './normalise-formats';\n\n/**\n * Insert a Rich Text value, an HTML string, or a plain text string, into a\n * Rich Text value at the given `startIndex`. Any content between `startIndex`\n * and `endIndex` will be removed. Indices are retrieved from the selection if\n * none are provided.\n *\n * @param {Object} value         Value to modify.\n * @param {string} valueToInsert Value to insert.\n * @param {number} startIndex    Start index.\n * @param {number} endIndex      End index.\n *\n * @return {Object} A new value with the value inserted.\n */\nexport function insert(\n\t{ formats, text, start, end },\n\tvalueToInsert,\n\tstartIndex = start,\n\tendIndex = end\n) {\n\tif ( typeof valueToInsert === 'string' ) {\n\t\tvalueToInsert = create( { text: valueToInsert } );\n\t}\n\n\tconst index = startIndex + valueToInsert.text.length;\n\n\treturn normaliseFormats( {\n\t\tformats: formats.slice( 0, startIndex ).concat( valueToInsert.formats, formats.slice( endIndex ) ),\n\t\ttext: text.slice( 0, startIndex ) + valueToInsert.text + text.slice( endIndex ),\n\t\tstart: index,\n\t\tend: index,\n\t} );\n}\n"]}