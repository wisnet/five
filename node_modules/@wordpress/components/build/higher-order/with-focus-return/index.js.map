{"version":3,"sources":["/Users/riad/Workspace/a8c/gutenberg/packages/components/src/higher-order/with-focus-return/index.js"],"names":["WrappedComponent","arguments","setIsFocusedTrue","isFocused","setIsFocusedFalse","activeElementOnMount","document","activeElement","body","focus","props","Component"],"mappings":";;;;;;;;;AAGA;;;;;;;;;;;;AACA;;AAJA;;;;AAMA;;;;;;;;;;eAUe,yCACd,UAAEA,gBAAF,EAAwB;AACvB;AAAA;AAAA;AAAA;;AACC,wBAAc;AAAA;;AAAA;AACb,iHAAUC,SAAV;;AAEA,cAAKC,gBAAL,GAAwB;AAAA,iBAAM,MAAKC,SAAL,GAAiB,IAAvB;AAAA,SAAxB;;AACA,cAAKC,iBAAL,GAAyB;AAAA,iBAAM,MAAKD,SAAL,GAAiB,KAAvB;AAAA,SAAzB;;AACA,cAAKE,oBAAL,GAA4BC,QAAQ,CAACC,aAArC;AALa;AAMb;;AAPF;AAAA;AAAA,+CASwB;AAAA,cACdF,oBADc,GACsB,IADtB,CACdA,oBADc;AAAA,cACQF,SADR,GACsB,IADtB,CACQA,SADR;;AAEtB,cAAK,CAAEE,oBAAP,EAA8B;AAC7B;AACA;;AAJqB,0BAMUC,QANV;AAAA,cAMdE,IANc,aAMdA,IANc;AAAA,cAMRD,aANQ,aAMRA,aANQ;;AAOtB,cAAKJ,SAAS,IAAI,SAASI,aAAtB,IAAuCC,IAAI,KAAKD,aAArD,EAAqE;AACpEF,YAAAA,oBAAoB,CAACI,KAArB;AACA;AACD;AAnBF;AAAA;AAAA,iCAqBU;AACR,iBACC;AACC,YAAA,OAAO,EAAG,KAAKP,gBADhB;AAEC,YAAA,MAAM,EAAG,KAAKE;AAFf,aAIC,4BAAC,gBAAD,EAAuB,KAAKM,KAA5B,CAJD,CADD;AAQA;AA9BF;AAAA;AAAA,MAAqBC,kBAArB;AAAA;AAgCA,CAlCa,EAkCX,iBAlCW,C","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { createHigherOrderComponent } from '@wordpress/compose';\n\n/**\n * Higher Order Component used to be used to wrap disposable elements like\n * sidebars, modals, dropdowns. When mounting the wrapped component, we track a\n * reference to the current active element so we know where to restore focus\n * when the component is unmounted.\n *\n * @param {WPElement} WrappedComponent The disposable component.\n *\n * @return {Component} Component with the focus restauration behaviour.\n */\nexport default createHigherOrderComponent(\n\t( WrappedComponent ) => {\n\t\treturn class extends Component {\n\t\t\tconstructor() {\n\t\t\t\tsuper( ...arguments );\n\n\t\t\t\tthis.setIsFocusedTrue = () => this.isFocused = true;\n\t\t\t\tthis.setIsFocusedFalse = () => this.isFocused = false;\n\t\t\t\tthis.activeElementOnMount = document.activeElement;\n\t\t\t}\n\n\t\t\tcomponentWillUnmount() {\n\t\t\t\tconst { activeElementOnMount, isFocused } = this;\n\t\t\t\tif ( ! activeElementOnMount ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { body, activeElement } = document;\n\t\t\t\tif ( isFocused || null === activeElement || body === activeElement ) {\n\t\t\t\t\tactiveElementOnMount.focus();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trender() {\n\t\t\t\treturn (\n\t\t\t\t\t<div\n\t\t\t\t\t\tonFocus={ this.setIsFocusedTrue }\n\t\t\t\t\t\tonBlur={ this.setIsFocusedFalse }\n\t\t\t\t\t>\n\t\t\t\t\t\t<WrappedComponent { ...this.props } />\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\t}, 'withFocusReturn'\n);\n"]}