{"version":3,"sources":["/Users/riad/Workspace/a8c/gutenberg/packages/data/src/store/reducer.js"],"names":["flowRight","EquivalentKeyMap","onSubKey","isResolved","state","action","type","isStarting","nextState","set","args","delete"],"mappings":"AAAA;;;AAGA,SAASA,SAAT,QAA0B,QAA1B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA;;;;AAGA,SAASC,QAAT,QAAyB,SAAzB;AAEA;;;;;;;;;;;AAUA,IAAMC,UAAU,GAAGH,SAAS,CAAE,CAC7BE,QAAQ,CAAE,YAAF,CADqB,EAE7BA,QAAQ,CAAE,cAAF,CAFqB,CAAF,CAAT,CAGd,YAA8C;AAAA,MAA5CE,KAA4C,uEAApC,IAAIH,gBAAJ,EAAoC;AAAA,MAAZI,MAAY;;AAClD,UAASA,MAAM,CAACC,IAAhB;AACC,SAAK,kBAAL;AACA,SAAK,mBAAL;AAA0B;AACzB,YAAMC,UAAU,GAAGF,MAAM,CAACC,IAAP,KAAgB,kBAAnC;AACA,YAAME,SAAS,GAAG,IAAIP,gBAAJ,CAAsBG,KAAtB,CAAlB;AACAI,QAAAA,SAAS,CAACC,GAAV,CAAeJ,MAAM,CAACK,IAAtB,EAA4BH,UAA5B;AACA,eAAOC,SAAP;AACA;;AACD,SAAK,uBAAL;AAA8B;AAC7B,YAAMA,UAAS,GAAG,IAAIP,gBAAJ,CAAsBG,KAAtB,CAAlB;;AACAI,QAAAA,UAAS,CAACG,MAAV,CAAkBN,MAAM,CAACK,IAAzB;;AACA,eAAOF,UAAP;AACA;AAZF;;AAeA,SAAOJ,KAAP;AACA,CApBkB,CAAnB;AAsBA,eAAeD,UAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { flowRight } from 'lodash';\nimport EquivalentKeyMap from 'equivalent-key-map';\n\n/**\n * Internal dependencies\n */\nimport { onSubKey } from './utils';\n\n/**\n * Reducer function returning next state for selector resolution, object form:\n *\n *  reducerKey -> selectorName -> EquivalentKeyMap<Array,boolean>\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @returns {Object} Next state.\n */\nconst isResolved = flowRight( [\n\tonSubKey( 'reducerKey' ),\n\tonSubKey( 'selectorName' ),\n] )( ( state = new EquivalentKeyMap(), action ) => {\n\tswitch ( action.type ) {\n\t\tcase 'START_RESOLUTION':\n\t\tcase 'FINISH_RESOLUTION': {\n\t\t\tconst isStarting = action.type === 'START_RESOLUTION';\n\t\t\tconst nextState = new EquivalentKeyMap( state );\n\t\t\tnextState.set( action.args, isStarting );\n\t\t\treturn nextState;\n\t\t}\n\t\tcase 'INVALIDATE_RESOLUTION': {\n\t\t\tconst nextState = new EquivalentKeyMap( state );\n\t\t\tnextState.delete( action.args );\n\t\t\treturn nextState;\n\t\t}\n\t}\n\n\treturn state;\n} );\n\nexport default isResolved;\n"]}