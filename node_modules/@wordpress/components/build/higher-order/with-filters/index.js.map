{"version":3,"sources":["/Users/riad/Workspace/a8c/gutenberg/packages/components/src/higher-order/with-filters/index.js"],"names":["ANIMATION_FRAME_PERIOD","withFilters","hookName","OriginalComponent","props","onHooksUpdated","bind","Component","namespace","throttledForceUpdate","forceUpdate","cancel","updatedHookName"],"mappings":";;;;;;;;;AAQA;;;;;;;;;;;;;;AALA;;AAMA;;AACA;;AAVA;;;;AAKA;;;AAOA,IAAMA,sBAAsB,GAAG,EAA/B;AAEA;;;;;;;;;;;AAUe,SAASC,WAAT,CAAsBC,QAAtB,EAAiC;AAC/C,SAAO,yCAA4B,UAAEC,iBAAF,EAAyB;AAC3D;AAAA;AAAA;AAAA;;AACC;AACA,mCAAaC,KAAb,EAAqB;AAAA;;AAAA;AACpB,6HAAOA,KAAP;AAEA,gBAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,mFAAtB;AACA,gBAAKC,SAAL,GAAiB,yBAAcL,QAAd,EAAwBC,iBAAxB,CAAjB;AACA,gBAAKK,SAAL,GAAiB,sBAAU,8BAAV,CAAjB;AACA,gBAAKC,oBAAL,GAA4B,sBAAU,YAAM;AAC3C,kBAAKF,SAAL,GAAiB,yBAAcL,QAAd,EAAwBC,iBAAxB,CAAjB;;AACA,kBAAKO,WAAL;AACA,WAH2B,EAGzBV,sBAHyB,CAA5B;AAKA,gCAAW,aAAX,EAA0B,MAAKQ,SAA/B,EAA0C,MAAKH,cAA/C;AACA,gCAAW,WAAX,EAAwB,MAAKG,SAA7B,EAAwC,MAAKH,cAA7C;AAZoB;AAapB;AAED;;;AAjBD;AAAA;AAAA,iDAkBwB;AACtB,iBAAKI,oBAAL,CAA0BE,MAA1B;AACA,qCAAc,aAAd,EAA6B,KAAKH,SAAlC;AACA,qCAAc,WAAd,EAA2B,KAAKA,SAAhC;AACA;AAED;;;;;;AAxBD;AAAA;AAAA,yCA6BiBI,eA7BjB,EA6BmC;AACjC,gBAAKA,eAAe,KAAKV,QAAzB,EAAoC;AACnC,mBAAKO,oBAAL;AACA;AACD;AAED;;AAnCD;AAAA;AAAA,mCAoCU;AACR,mBAAO,iCAAM,SAAN,EAAqB,KAAKL,KAA1B,CAAP;AACA;AAtCF;AAAA;AAAA,QAAuCG,kBAAvC;AAAA;AAwCA,GAzCM,EAyCJ,aAzCI,CAAP;AA0CA","sourcesContent":["/**\n * External dependencies\n */\nimport { debounce, uniqueId } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { addAction, applyFilters, removeAction } from '@wordpress/hooks';\nimport { createHigherOrderComponent } from '@wordpress/compose';\n\nconst ANIMATION_FRAME_PERIOD = 16;\n\n/**\n * Creates a higher-order component which adds filtering capability to the\n * wrapped component. Filters get applied when the original component is about\n * to be mounted. When a filter is added or removed that matches the hook name,\n * the wrapped component re-renders.\n *\n * @param {string} hookName Hook name exposed to be used by filters.\n *\n * @return {Function} Higher-order component factory.\n */\nexport default function withFilters( hookName ) {\n\treturn createHigherOrderComponent( ( OriginalComponent ) => {\n\t\treturn class FilteredComponent extends Component {\n\t\t\t/** @inheritdoc */\n\t\t\tconstructor( props ) {\n\t\t\t\tsuper( props );\n\n\t\t\t\tthis.onHooksUpdated = this.onHooksUpdated.bind( this );\n\t\t\t\tthis.Component = applyFilters( hookName, OriginalComponent );\n\t\t\t\tthis.namespace = uniqueId( 'core/with-filters/component-' );\n\t\t\t\tthis.throttledForceUpdate = debounce( () => {\n\t\t\t\t\tthis.Component = applyFilters( hookName, OriginalComponent );\n\t\t\t\t\tthis.forceUpdate();\n\t\t\t\t}, ANIMATION_FRAME_PERIOD );\n\n\t\t\t\taddAction( 'hookRemoved', this.namespace, this.onHooksUpdated );\n\t\t\t\taddAction( 'hookAdded', this.namespace, this.onHooksUpdated );\n\t\t\t}\n\n\t\t\t/** @inheritdoc */\n\t\t\tcomponentWillUnmount() {\n\t\t\t\tthis.throttledForceUpdate.cancel();\n\t\t\t\tremoveAction( 'hookRemoved', this.namespace );\n\t\t\t\tremoveAction( 'hookAdded', this.namespace );\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * When a filter is added or removed for the matching hook name, the wrapped component should re-render.\n\t\t\t *\n\t\t\t * @param {string} updatedHookName  Name of the hook that was updated.\n\t\t\t */\n\t\t\tonHooksUpdated( updatedHookName ) {\n\t\t\t\tif ( updatedHookName === hookName ) {\n\t\t\t\t\tthis.throttledForceUpdate();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/** @inheritdoc */\n\t\t\trender() {\n\t\t\t\treturn <this.Component { ...this.props } />;\n\t\t\t}\n\t\t};\n\t}, 'withFilters' );\n}\n"]}