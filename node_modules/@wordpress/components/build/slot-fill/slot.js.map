{"version":3,"sources":["/Users/riad/Workspace/a8c/gutenberg/packages/components/src/slot-fill/slot.js"],"names":["SlotComponent","arguments","bindNode","bind","registerSlot","props","name","unregisterSlot","prevProps","node","children","bubblesVirtually","fillProps","getFills","fills","fill","fillKey","occurrence","fillChildren","Children","map","child","childIndex","childKey","key","filter","isEmptyElement","Component","Slot"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport {\n\tisFunction,\n\tisString,\n\tmap,\n\tnegate,\n} from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tChildren,\n\tComponent,\n\tcloneElement,\n\tFragment,\n\tisEmptyElement,\n} from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { Consumer } from './context';\n\nclass SlotComponent extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.bindNode = this.bindNode.bind( this );\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { registerSlot } = this.props;\n\n\t\tregisterSlot( this.props.name, this );\n\t}\n\n\tcomponentWillUnmount() {\n\t\tconst { unregisterSlot } = this.props;\n\n\t\tunregisterSlot( this.props.name, this );\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tconst { name, unregisterSlot, registerSlot } = this.props;\n\n\t\tif ( prevProps.name !== name ) {\n\t\t\tunregisterSlot( prevProps.name );\n\t\t\tregisterSlot( name, this );\n\t\t}\n\t}\n\n\tbindNode( node ) {\n\t\tthis.node = node;\n\t}\n\n\trender() {\n\t\tconst { children, name, bubblesVirtually = false, fillProps = {}, getFills } = this.props;\n\n\t\tif ( bubblesVirtually ) {\n\t\t\treturn <div ref={ this.bindNode } />;\n\t\t}\n\n\t\tconst fills = map( getFills( name ), ( fill ) => {\n\t\t\tconst fillKey = fill.occurrence;\n\t\t\tconst fillChildren = isFunction( fill.props.children ) ? fill.props.children( fillProps ) : fill.props.children;\n\n\t\t\treturn Children.map( fillChildren, ( child, childIndex ) => {\n\t\t\t\tif ( ! child || isString( child ) ) {\n\t\t\t\t\treturn child;\n\t\t\t\t}\n\n\t\t\t\tconst childKey = `${ fillKey }---${ child.key || childIndex }`;\n\t\t\t\treturn cloneElement( child, { key: childKey } );\n\t\t\t} );\n\t\t} ).filter(\n\t\t\t// In some cases fills are rendered only when some conditions apply.\n\t\t\t// This ensures that we only use non-empty fills when rendering, i.e.,\n\t\t\t// it allows us to render wrappers only when the fills are actually present.\n\t\t\tnegate( isEmptyElement )\n\t\t);\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t{ isFunction( children ) ? children( fills ) : fills }\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nconst Slot = ( props ) => (\n\t<Consumer>\n\t\t{ ( { registerSlot, unregisterSlot, getFills } ) => (\n\t\t\t<SlotComponent\n\t\t\t\t{ ...props }\n\t\t\t\tregisterSlot={ registerSlot }\n\t\t\t\tunregisterSlot={ unregisterSlot }\n\t\t\t\tgetFills={ getFills }\n\t\t\t/>\n\t\t) }\n\t</Consumer>\n);\n\nexport default Slot;\n"]}