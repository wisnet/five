{"version":3,"sources":["/Users/riad/Workspace/a8c/gutenberg/packages/rich-text/src/join.js"],"names":["join","values","separator","text","reduce","accumlator","formats","concat"],"mappings":";;;;;;;AAIA;;AACA;;AALA;;;;AAOA;;;;;;;;;;AAUO,SAASA,IAAT,CAAeC,MAAf,EAAwC;AAAA,MAAjBC,SAAiB,uEAAL,EAAK;;AAC9C,MAAK,OAAOA,SAAP,KAAqB,QAA1B,EAAqC;AACpCA,IAAAA,SAAS,GAAG,oBAAQ;AAAEC,MAAAA,IAAI,EAAED;AAAR,KAAR,CAAZ;AACA;;AAED,SAAO,wCAAkBD,MAAM,CAACG,MAAP,CAAe,UAAEC,UAAF;AAAA,QAAgBC,OAAhB,QAAgBA,OAAhB;AAAA,QAAyBH,IAAzB,QAAyBA,IAAzB;AAAA,WAAuC;AAC9EA,MAAAA,IAAI,EAAEE,UAAU,CAACF,IAAX,GAAkBD,SAAS,CAACC,IAA5B,GAAmCA,IADqC;AAE9EG,MAAAA,OAAO,EAAED,UAAU,CAACC,OAAX,CAAmBC,MAAnB,CAA2BL,SAAS,CAACI,OAArC,EAA8CA,OAA9C;AAFqE,KAAvC;AAAA,GAAf,CAAlB,CAAP;AAIA","sourcesContent":["/**\n * Internal dependencies\n */\n\nimport { create } from './create';\nimport { normaliseFormats } from './normalise-formats';\n\n/**\n * Combine an array of Rich Text values into one, optionally separated by\n * `separator`, which can be a Rich Text value, HTML string, or plain text\n * string. This is similar to `Array.prototype.join`.\n *\n * @param {Array}         values    An array of values to join.\n * @param {string|Object} separator Separator string or value.\n *\n * @return {Object} A new combined value.\n */\nexport function join( values, separator = '' ) {\n\tif ( typeof separator === 'string' ) {\n\t\tseparator = create( { text: separator } );\n\t}\n\n\treturn normaliseFormats( values.reduce( ( accumlator, { formats, text } ) => ( {\n\t\ttext: accumlator.text + separator.text + text,\n\t\tformats: accumlator.formats.concat( separator.formats, formats ),\n\t} ) ) );\n}\n"]}