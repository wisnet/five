{"version":3,"sources":["/Users/riad/Workspace/a8c/gutenberg/packages/components/src/server-side-render/index.js"],"names":["isEqual","debounce","Component","RawHTML","__","sprintf","apiFetch","addQueryArgs","Placeholder","Spinner","rendererPath","block","attributes","urlQueryArgs","context","ServerSideRender","props","state","response","isStillMounted","fetch","prevProps","setState","path","fetchRequest","currentFetchRequest","then","rendered","catch","error","errorMsg","message","errorMessage","length"],"mappings":"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","sourcesContent":["/**\n * External dependencies.\n */\nimport { isEqual, debounce } from 'lodash';\n\n/**\n * WordPress dependencies.\n */\nimport {\n\tComponent,\n\tRawHTML,\n} from '@wordpress/element';\nimport { __, sprintf } from '@wordpress/i18n';\nimport apiFetch from '@wordpress/api-fetch';\nimport { addQueryArgs } from '@wordpress/url';\n\n/**\n * Internal dependencies.\n */\nimport Placeholder from '../placeholder';\nimport Spinner from '../spinner';\n\nexport function rendererPath( block, attributes = null, urlQueryArgs = {} ) {\n\treturn addQueryArgs( `/wp/v2/block-renderer/${ block }`, {\n\t\tcontext: 'edit',\n\t\t...( null !== attributes ? { attributes } : {} ),\n\t\t...urlQueryArgs,\n\t} );\n}\n\nexport class ServerSideRender extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.state = {\n\t\t\tresponse: null,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.isStillMounted = true;\n\t\tthis.fetch( this.props );\n\t\t// Only debounce once the initial fetch occurs to ensure that the first\n\t\t// renders show data as soon as possible.\n\t\tthis.fetch = debounce( this.fetch, 500 );\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.isStillMounted = false;\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( ! isEqual( prevProps, this.props ) ) {\n\t\t\tthis.fetch( this.props );\n\t\t}\n\t}\n\n\tfetch( props ) {\n\t\tif ( ! this.isStillMounted ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( null !== this.state.response ) {\n\t\t\tthis.setState( { response: null } );\n\t\t}\n\t\tconst { block, attributes = null, urlQueryArgs = {} } = props;\n\n\t\tconst path = rendererPath( block, attributes, urlQueryArgs );\n\t\t// Store the latest fetch request so that when we process it, we can\n\t\t// check if it is the current request, to avoid race conditions on slow networks.\n\t\tconst fetchRequest = this.currentFetchRequest = apiFetch( { path } )\n\t\t\t.then( ( response ) => {\n\t\t\t\tif ( this.isStillMounted && fetchRequest === this.currentFetchRequest && response && response.rendered ) {\n\t\t\t\t\tthis.setState( { response: response.rendered } );\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.catch( ( error ) => {\n\t\t\t\tif ( this.isStillMounted && fetchRequest === this.currentFetchRequest ) {\n\t\t\t\t\tthis.setState( { response: {\n\t\t\t\t\t\terror: true,\n\t\t\t\t\t\terrorMsg: error.message,\n\t\t\t\t\t} } );\n\t\t\t\t}\n\t\t\t} );\n\t\treturn fetchRequest;\n\t}\n\n\trender() {\n\t\tconst response = this.state.response;\n\t\tif ( ! response ) {\n\t\t\treturn (\n\t\t\t\t<Placeholder><Spinner /></Placeholder>\n\t\t\t);\n\t\t} else if ( response.error ) {\n\t\t\t// translators: %s: error message describing the problem\n\t\t\tconst errorMessage = sprintf( __( 'Error loading block: %s' ), response.errorMsg );\n\t\t\treturn (\n\t\t\t\t<Placeholder>{ errorMessage }</Placeholder>\n\t\t\t);\n\t\t} else if ( ! response.length ) {\n\t\t\treturn (\n\t\t\t\t<Placeholder>{ __( 'No results found.' ) }</Placeholder>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<RawHTML key=\"html\">{ response }</RawHTML>\n\t\t);\n\t}\n}\n\nexport default ServerSideRender;\n"]}