{"version":3,"sources":["/Users/riad/Workspace/a8c/gutenberg/packages/components/src/dropdown/index.js"],"names":["Dropdown","arguments","toggle","bind","close","closeIfClickOutside","containerRef","state","isOpen","onToggle","props","prevProps","prevState","setState","event","current","contains","target","renderContent","renderToggle","position","className","contentClassName","expandOnMobile","headerTitle","args","onClose","Component"],"mappings":";;;;;;;;;AAGA;;;;;;;;;;;;;;AAKA;;AARA;;;;AAKA;;;IAKMA,Q;;;;;AACL,sBAAc;AAAA;;AAAA;AACb,+GAAUC,SAAV;AAEA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,mFAAd;AACA,UAAKC,KAAL,GAAa,MAAKA,KAAL,CAAWD,IAAX,mFAAb;AACA,UAAKE,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBF,IAAzB,mFAA3B;AAEA,UAAKG,YAAL,GAAoB,yBAApB;AAEA,UAAKC,KAAL,GAAa;AACZC,MAAAA,MAAM,EAAE;AADI,KAAb;AATa;AAYb;;;;2CAEsB;AAAA,UACdA,MADc,GACH,KAAKD,KADF,CACdC,MADc;AAAA,UAEdC,QAFc,GAED,KAAKC,KAFJ,CAEdD,QAFc;;AAGtB,UAAKD,MAAM,IAAIC,QAAf,EAA0B;AACzBA,QAAAA,QAAQ,CAAE,KAAF,CAAR;AACA;AACD;;;uCAEmBE,S,EAAWC,S,EAAY;AAAA,UAClCJ,MADkC,GACvB,KAAKD,KADkB,CAClCC,MADkC;AAAA,UAElCC,QAFkC,GAErB,KAAKC,KAFgB,CAElCD,QAFkC;;AAG1C,UAAKG,SAAS,CAACJ,MAAV,KAAqBA,MAArB,IAA+BC,QAApC,EAA+C;AAC9CA,QAAAA,QAAQ,CAAED,MAAF,CAAR;AACA;AACD;;;6BAEQ;AACR,WAAKK,QAAL,CAAe,UAAEN,KAAF;AAAA,eAAe;AAC7BC,UAAAA,MAAM,EAAE,CAAED,KAAK,CAACC;AADa,SAAf;AAAA,OAAf;AAGA;AAED;;;;;;;;;;;wCAQqBM,K,EAAQ;AAC5B,UAAK,CAAE,KAAKR,YAAL,CAAkBS,OAAlB,CAA0BC,QAA1B,CAAoCF,KAAK,CAACG,MAA1C,CAAP,EAA4D;AAC3D,aAAKb,KAAL;AACA;AACD;;;4BAEO;AACP,WAAKS,QAAL,CAAe;AAAEL,QAAAA,MAAM,EAAE;AAAV,OAAf;AACA;;;6BAEQ;AAAA,UACAA,MADA,GACW,KAAKD,KADhB,CACAC,MADA;AAAA,wBAUJ,KAAKE,KAVD;AAAA,UAGPQ,aAHO,eAGPA,aAHO;AAAA,UAIPC,YAJO,eAIPA,YAJO;AAAA,6CAKPC,QALO;AAAA,UAKPA,QALO,qCAKI,QALJ;AAAA,UAMPC,SANO,eAMPA,SANO;AAAA,UAOPC,gBAPO,eAOPA,gBAPO;AAAA,UAQPC,cARO,eAQPA,cARO;AAAA,UASPC,WATO,eASPA,WATO;AAYR,UAAMC,IAAI,GAAG;AAAEjB,QAAAA,MAAM,EAANA,MAAF;AAAUC,QAAAA,QAAQ,EAAE,KAAKP,MAAzB;AAAiCwB,QAAAA,OAAO,EAAE,KAAKtB;AAA/C,OAAb;AAEA,aACC;AAAK,QAAA,SAAS,EAAGiB,SAAjB;AAA6B,QAAA,GAAG,EAAG,KAAKf;AAAxC,SACGa,YAAY,CAAEM,IAAF,CADf,EAEGjB,MAAM,IACP,4BAAC,gBAAD;AACC,QAAA,SAAS,EAAGc,gBADb;AAEC,QAAA,QAAQ,EAAGF,QAFZ;AAGC,QAAA,OAAO,EAAG,KAAKhB,KAHhB;AAIC,QAAA,cAAc,EAAG,KAAKC,mBAJvB;AAKC,QAAA,cAAc,EAAGkB,cALlB;AAMC,QAAA,WAAW,EAAGC;AANf,SAQGN,aAAa,CAAEO,IAAF,CARhB,CAHF,CADD;AAiBA;;;EAtFqBE,kB;;eAyFR3B,Q","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { Component, createRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport Popover from '../popover';\n\nclass Dropdown extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.toggle = this.toggle.bind( this );\n\t\tthis.close = this.close.bind( this );\n\t\tthis.closeIfClickOutside = this.closeIfClickOutside.bind( this );\n\n\t\tthis.containerRef = createRef();\n\n\t\tthis.state = {\n\t\t\tisOpen: false,\n\t\t};\n\t}\n\n\tcomponentWillUnmount() {\n\t\tconst { isOpen } = this.state;\n\t\tconst { onToggle } = this.props;\n\t\tif ( isOpen && onToggle ) {\n\t\t\tonToggle( false );\n\t\t}\n\t}\n\n\tcomponentDidUpdate( prevProps, prevState ) {\n\t\tconst { isOpen } = this.state;\n\t\tconst { onToggle } = this.props;\n\t\tif ( prevState.isOpen !== isOpen && onToggle ) {\n\t\t\tonToggle( isOpen );\n\t\t}\n\t}\n\n\ttoggle() {\n\t\tthis.setState( ( state ) => ( {\n\t\t\tisOpen: ! state.isOpen,\n\t\t} ) );\n\t}\n\n\t/**\n\t * Closes the dropdown if a click occurs outside the dropdown wrapper. This\n\t * is intentionally distinct from `onClose` in that a click outside the\n\t * popover may occur in the toggling of the dropdown via its toggle button.\n\t * The correct behavior is to keep the dropdown closed.\n\t *\n\t * @param {MouseEvent} event Click event triggering `onClickOutside`.\n\t */\n\tcloseIfClickOutside( event ) {\n\t\tif ( ! this.containerRef.current.contains( event.target ) ) {\n\t\t\tthis.close();\n\t\t}\n\t}\n\n\tclose() {\n\t\tthis.setState( { isOpen: false } );\n\t}\n\n\trender() {\n\t\tconst { isOpen } = this.state;\n\t\tconst {\n\t\t\trenderContent,\n\t\t\trenderToggle,\n\t\t\tposition = 'bottom',\n\t\t\tclassName,\n\t\t\tcontentClassName,\n\t\t\texpandOnMobile,\n\t\t\theaderTitle,\n\t\t} = this.props;\n\n\t\tconst args = { isOpen, onToggle: this.toggle, onClose: this.close };\n\n\t\treturn (\n\t\t\t<div className={ className } ref={ this.containerRef }>\n\t\t\t\t{ renderToggle( args ) }\n\t\t\t\t{ isOpen && (\n\t\t\t\t\t<Popover\n\t\t\t\t\t\tclassName={ contentClassName }\n\t\t\t\t\t\tposition={ position }\n\t\t\t\t\t\tonClose={ this.close }\n\t\t\t\t\t\tonClickOutside={ this.closeIfClickOutside }\n\t\t\t\t\t\texpandOnMobile={ expandOnMobile }\n\t\t\t\t\t\theaderTitle={ headerTitle }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ renderContent( args ) }\n\t\t\t\t\t</Popover>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Dropdown;\n"]}