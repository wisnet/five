{"version":3,"sources":["/Users/riad/Workspace/a8c/gutenberg/packages/data/src/components/with-dispatch/index.js"],"names":["mapValues","Component","createHigherOrderComponent","RegistryConsumer","withDispatch","mapDispatchToProps","WrappedComponent","ComponentWithDispatch","props","arguments","proxyProps","setProxyProps","propName","args","registry","dispatch","ownProps","propsToDispatchers","dispatcher","console","warn","hasOwnProperty","proxyDispatch","bind"],"mappings":";;;;;;;;AAAA;;;AAGA,SAASA,SAAT,QAA0B,QAA1B;AAEA;;;;AAGA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,0BAAT,QAA2C,oBAA3C;AAEA;;;;AAGA,SAASC,gBAAT,QAAiC,sBAAjC;AAEA;;;;;;;;;;;;;AAYA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAEC,kBAAF;AAAA,SAA0BH,0BAA0B,CACxE,UAAEI,gBAAF,EAAwB;AAAA,QACjBC,qBADiB;AAAA;AAAA;AAAA;;AAEtB,qCAAaC,KAAb,EAAqB;AAAA;;AAAA;;AACpB,oGAAUC,SAAV;AAEA,cAAKC,UAAL,GAAkB,EAAlB;;AAEA,cAAKC,aAAL,CAAoBH,KAApB;;AALoB;AAMpB;;AARqB;AAAA;AAAA,sCAUPI,QAVO,EAUa;AAAA;;AAAA,4CAAPC,IAAO;AAAPA,YAAAA,IAAO;AAAA;;AAClC;AACA,iCAAAR,kBAAkB,CAAE,KAAKG,KAAL,CAAWM,QAAX,CAAoBC,QAAtB,EAAgC,KAAKP,KAAL,CAAWQ,QAA3C,EAAqD,KAAKR,KAAL,CAAWM,QAAhE,CAAlB,EAA8FF,QAA9F,6BAA6GC,IAA7G;AACA;AAbqB;AAAA;AAAA,sCAePL,KAfO,EAeC;AAAA;;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,cAAMS,kBAAkB,GAAGZ,kBAAkB,CAAE,KAAKG,KAAL,CAAWM,QAAX,CAAoBC,QAAtB,EAAgCP,KAAK,CAACQ,QAAtC,EAAgD,KAAKR,KAAL,CAAWM,QAA3D,CAA7C;AACA,eAAKJ,UAAL,GAAkBV,SAAS,CAAEiB,kBAAF,EAAsB,UAAEC,UAAF,EAAcN,QAAd,EAA4B;AAC5E,gBAAK,OAAOM,UAAP,KAAsB,UAA3B,EAAwC;AACvC;AACAC,cAAAA,OAAO,CAACC,IAAR,oBAA2BR,QAA3B;AACA,aAJ2E,CAK5E;AACA;AACA;;;AACA,gBAAK,MAAI,CAACF,UAAL,CAAgBW,cAAhB,CAAgCT,QAAhC,CAAL,EAAkD;AACjD,qBAAO,MAAI,CAACF,UAAL,CAAiBE,QAAjB,CAAP;AACA;;AAED,mBAAO,MAAI,CAACU,aAAL,CAAmBC,IAAnB,CAAyB,MAAzB,EAA+BX,QAA/B,CAAP;AACA,WAb0B,CAA3B;AAcA;AArCqB;AAAA;AAAA,iCAuCb;AACR,iBAAO,cAAC,gBAAD,eAAuB,KAAKJ,KAAL,CAAWQ,QAAlC,EAAkD,KAAKN,UAAvD,EAAP;AACA;AAzCqB;;AAAA;AAAA,MACaT,SADb;;AA4CvB,WAAO,UAAEe,QAAF;AAAA,aACN,cAAC,gBAAD,QACG,UAAEF,QAAF;AAAA,eACD,cAAC,qBAAD;AACC,UAAA,QAAQ,EAAGE,QADZ;AAEC,UAAA,QAAQ,EAAGF;AAFZ,UADC;AAAA,OADH,CADM;AAAA,KAAP;AAUA,GAvDuE,EAwDxE,cAxDwE,CAApD;AAAA,CAArB;;AA2DA,eAAeV,YAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { mapValues } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { createHigherOrderComponent } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { RegistryConsumer } from '../registry-provider';\n\n/**\n * Higher-order component used to add dispatch props using registered action\n * creators.\n *\n * @param {Object} mapDispatchToProps Object of prop names where value is a\n *                                    dispatch-bound action creator, or a\n *                                    function to be called with with the\n *                                    component's props and returning an\n *                                    action creator.\n *\n * @return {Component} Enhanced component with merged dispatcher props.\n */\nconst withDispatch = ( mapDispatchToProps ) => createHigherOrderComponent(\n\t( WrappedComponent ) => {\n\t\tclass ComponentWithDispatch extends Component {\n\t\t\tconstructor( props ) {\n\t\t\t\tsuper( ...arguments );\n\n\t\t\t\tthis.proxyProps = {};\n\n\t\t\t\tthis.setProxyProps( props );\n\t\t\t}\n\n\t\t\tproxyDispatch( propName, ...args ) {\n\t\t\t\t// Original dispatcher is a pre-bound (dispatching) action creator.\n\t\t\t\tmapDispatchToProps( this.props.registry.dispatch, this.props.ownProps, this.props.registry )[ propName ]( ...args );\n\t\t\t}\n\n\t\t\tsetProxyProps( props ) {\n\t\t\t\t// Assign as instance property so that in subsequent render\n\t\t\t\t// reconciliation, the prop values are referentially equal.\n\t\t\t\t// Importantly, note that while `mapDispatchToProps` is\n\t\t\t\t// called, it is done only to determine the keys for which\n\t\t\t\t// proxy functions should be created. The actual registry\n\t\t\t\t// dispatch does not occur until the function is called.\n\t\t\t\tconst propsToDispatchers = mapDispatchToProps( this.props.registry.dispatch, props.ownProps, this.props.registry );\n\t\t\t\tthis.proxyProps = mapValues( propsToDispatchers, ( dispatcher, propName ) => {\n\t\t\t\t\tif ( typeof dispatcher !== 'function' ) {\n\t\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\t\tconsole.warn( `Property ${ propName } returned from mapDispatchToProps in withDispatch must be a function.` );\n\t\t\t\t\t}\n\t\t\t\t\t// Prebind with prop name so we have reference to the original\n\t\t\t\t\t// dispatcher to invoke. Track between re-renders to avoid\n\t\t\t\t\t// creating new function references every render.\n\t\t\t\t\tif ( this.proxyProps.hasOwnProperty( propName ) ) {\n\t\t\t\t\t\treturn this.proxyProps[ propName ];\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.proxyDispatch.bind( this, propName );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\trender() {\n\t\t\t\treturn <WrappedComponent { ...this.props.ownProps } { ...this.proxyProps } />;\n\t\t\t}\n\t\t}\n\n\t\treturn ( ownProps ) => (\n\t\t\t<RegistryConsumer>\n\t\t\t\t{ ( registry ) => (\n\t\t\t\t\t<ComponentWithDispatch\n\t\t\t\t\t\townProps={ ownProps }\n\t\t\t\t\t\tregistry={ registry }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</RegistryConsumer>\n\t\t);\n\t},\n\t'withDispatch'\n);\n\nexport default withDispatch;\n"]}