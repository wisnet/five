{"version":3,"sources":["/Users/riad/Workspace/a8c/gutenberg/packages/components/src/draggable/index.js"],"names":["noop","Component","withSafeTimeout","dragImageClass","cloneWrapperClass","cloneHeightTransformationBreakpoint","clonePadding","isChromeUA","test","window","navigator","userAgent","documentHasIframes","document","getElementById","querySelectorAll","length","Draggable","arguments","onDragStart","bind","onDragOver","onDrop","onDragEnd","resetDragState","isChromeAndHasIframes","event","props","preventDefault","setTimeout","cloneWrapper","style","top","parseInt","clientY","cursorTop","left","clientX","cursorLeft","elementId","transferData","element","dataTransfer","setDragImage","dragImage","createElement","id","classList","add","body","appendChild","removeChild","setData","JSON","stringify","elementRect","getBoundingClientRect","elementWrapper","parentNode","elementTopOffset","elementLeftOffset","clone","cloneNode","width","height","transform","transformOrigin","forEach","child","addEventListener","removeEventListener","remove","children","onDraggableStart","onDraggableEnd"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { noop } from 'lodash';\n\n/**\n * WordPress Dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { withSafeTimeout } from '@wordpress/compose';\n\nconst dragImageClass = 'components-draggable__invisible-drag-image';\nconst cloneWrapperClass = 'components-draggable__clone';\nconst cloneHeightTransformationBreakpoint = 700;\nconst clonePadding = 20;\n\nconst isChromeUA = ( ) => /Chrome/i.test( window.navigator.userAgent );\nconst documentHasIframes = ( ) => [ ...document.getElementById( 'editor' ).querySelectorAll( 'iframe' ) ].length > 0;\n\nclass Draggable extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.onDragStart = this.onDragStart.bind( this );\n\t\tthis.onDragOver = this.onDragOver.bind( this );\n\t\tthis.onDrop = this.onDrop.bind( this );\n\t\tthis.onDragEnd = this.onDragEnd.bind( this );\n\t\tthis.resetDragState = this.resetDragState.bind( this );\n\n\t\tthis.isChromeAndHasIframes = false;\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.resetDragState();\n\t}\n\n\t/**\n\t * Removes the element clone, resets cursor, and removes drag listener.\n\t * @param  {Object} event     The non-custom DragEvent.\n\t */\n\tonDragEnd( event ) {\n\t\tconst { onDragEnd = noop } = this.props;\n\t\tif ( event ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\tthis.resetDragState();\n\t\tthis.props.setTimeout( onDragEnd );\n\t}\n\n\t/*\n\t * Updates positioning of element clone based on mouse movement during dragging.\n\t * @param  {Object} event     The non-custom DragEvent.\n\t */\n\tonDragOver( event ) {\n\t\tthis.cloneWrapper.style.top =\n\t\t\t`${ parseInt( this.cloneWrapper.style.top, 10 ) + event.clientY - this.cursorTop }px`;\n\t\tthis.cloneWrapper.style.left =\n\t\t\t`${ parseInt( this.cloneWrapper.style.left, 10 ) + event.clientX - this.cursorLeft }px`;\n\n\t\t// Update cursor coordinates.\n\t\tthis.cursorLeft = event.clientX;\n\t\tthis.cursorTop = event.clientY;\n\t}\n\n\tonDrop( ) {\n\t\t// As per https://html.spec.whatwg.org/multipage/dnd.html#dndevents\n\t\t// the target node for the dragend is the source node that started the drag operation,\n\t\t// while drop event's target is the current target element.\n\t\tthis.onDragEnd( null );\n\t}\n\n\t/**\n\t *  - Clones the current element and spawns clone over original element.\n\t *  - Adds a fake temporary drag image to avoid browser defaults.\n\t *  - Sets transfer data.\n\t *  - Adds dragover listener.\n\t * @param  {Object} event\t\t\t\t\tThe non-custom DragEvent.\n\t * @param  {string} elementId\t\t\t\tThe HTML id of the element to be dragged.\n\t * @param  {Object} transferData\t\t\tThe data to be set to the event's dataTransfer - to be accessible in any later drop logic.\n\t */\n\tonDragStart( event ) {\n\t\tconst { elementId, transferData, onDragStart = noop } = this.props;\n\t\tconst element = document.getElementById( elementId );\n\t\tif ( ! element ) {\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\t// Set a fake drag image to avoid browser defaults. Remove from DOM\n\t\t// right after. event.dataTransfer.setDragImage is not supported yet in\n\t\t// IE, we need to check for its existence first.\n\t\tif ( 'function' === typeof event.dataTransfer.setDragImage ) {\n\t\t\tconst dragImage = document.createElement( 'div' );\n\t\t\tdragImage.id = `drag-image-${ elementId }`;\n\t\t\tdragImage.classList.add( dragImageClass );\n\t\t\tdocument.body.appendChild( dragImage );\n\t\t\tevent.dataTransfer.setDragImage( dragImage, 0, 0 );\n\t\t\tthis.props.setTimeout( () => {\n\t\t\t\tdocument.body.removeChild( dragImage );\n\t\t\t} );\n\t\t}\n\n\t\tevent.dataTransfer.setData( 'text', JSON.stringify( transferData ) );\n\n\t\t// Prepare element clone and append to element wrapper.\n\t\tconst elementRect = element.getBoundingClientRect();\n\t\tconst elementWrapper = element.parentNode;\n\t\tconst elementTopOffset = parseInt( elementRect.top, 10 );\n\t\tconst elementLeftOffset = parseInt( elementRect.left, 10 );\n\t\tconst clone = element.cloneNode( true );\n\t\tclone.id = `clone-${ elementId }`;\n\t\tthis.cloneWrapper = document.createElement( 'div' );\n\t\tthis.cloneWrapper.classList.add( cloneWrapperClass );\n\t\tthis.cloneWrapper.style.width = `${ elementRect.width + ( clonePadding * 2 ) }px`;\n\n\t\tif ( elementRect.height > cloneHeightTransformationBreakpoint ) {\n\t\t\t// Scale down clone if original element is larger than 700px.\n\t\t\tthis.cloneWrapper.style.transform = 'scale(0.5)';\n\t\t\tthis.cloneWrapper.style.transformOrigin = 'top left';\n\t\t\t// Position clone near the cursor.\n\t\t\tthis.cloneWrapper.style.top = `${ event.clientY - 100 }px`;\n\t\t\tthis.cloneWrapper.style.left = `${ event.clientX }px`;\n\t\t} else {\n\t\t\t// Position clone right over the original element (20px padding).\n\t\t\tthis.cloneWrapper.style.top = `${ elementTopOffset - clonePadding }px`;\n\t\t\tthis.cloneWrapper.style.left = `${ elementLeftOffset - clonePadding }px`;\n\t\t}\n\n\t\t// Hack: Remove iFrames as it's causing the embeds drag clone to freeze\n\t\t[ ...clone.querySelectorAll( 'iframe' ) ].forEach( ( child ) => child.parentNode.removeChild( child ) );\n\n\t\tthis.cloneWrapper.appendChild( clone );\n\t\telementWrapper.appendChild( this.cloneWrapper );\n\n\t\t// Mark the current cursor coordinates.\n\t\tthis.cursorLeft = event.clientX;\n\t\tthis.cursorTop = event.clientY;\n\t\t// Update cursor to 'grabbing', document wide.\n\t\tdocument.body.classList.add( 'is-dragging-components-draggable' );\n\t\tdocument.addEventListener( 'dragover', this.onDragOver );\n\n\t\t// Fixes https://bugs.chromium.org/p/chromium/issues/detail?id=737691#c8\n\t\t// dragend event won't be dispatched in the chrome browser\n\t\t// when iframes are affected by the drag operation. So, in that case,\n\t\t// we use the drop event to wrap up the dragging operation.\n\t\t// This way the hack is contained to a specific use case and the external API\n\t\t// still relies mostly on the dragend event.\n\t\tif ( isChromeUA() && documentHasIframes() ) {\n\t\t\tthis.isChromeAndHasIframes = true;\n\t\t\tdocument.addEventListener( 'drop', this.onDrop );\n\t\t}\n\n\t\tthis.props.setTimeout( onDragStart );\n\t}\n\n\t/**\n\t * Cleans up drag state when drag has completed, or component unmounts\n\t * while dragging.\n\t */\n\tresetDragState() {\n\t\t// Remove drag clone\n\t\tdocument.removeEventListener( 'dragover', this.onDragOver );\n\t\tif ( this.cloneWrapper && this.cloneWrapper.parentNode ) {\n\t\t\tthis.cloneWrapper.parentNode.removeChild( this.cloneWrapper );\n\t\t\tthis.cloneWrapper = null;\n\t\t}\n\n\t\tif ( this.isChromeAndHasIframes ) {\n\t\t\tthis.isChromeAndHasIframes = false;\n\t\t\tdocument.removeEventListener( 'drop', this.onDrop );\n\t\t}\n\n\t\t// Reset cursor.\n\t\tdocument.body.classList.remove( 'is-dragging-components-draggable' );\n\t}\n\n\trender() {\n\t\tconst { children } = this.props;\n\n\t\treturn children( {\n\t\t\tonDraggableStart: this.onDragStart,\n\t\t\tonDraggableEnd: this.onDragEnd,\n\t\t} );\n\t}\n}\n\nexport default withSafeTimeout( Draggable );\n"]}