{"version":3,"sources":["/Users/riad/Workspace/a8c/gutenberg/packages/blocks/src/api/index.js"],"names":["createBlock","cloneBlock","getPossibleBlockTransformations","switchToBlockType","getBlockTransforms","findTransform","default","parse","getBlockAttributes","parseWithAttributeSchema","pasteHandler","rawHandler","getPhrasingContentSchema","serialize","getBlockContent","getBlockDefaultClassName","getBlockMenuDefaultClassName","getSaveElement","getSaveContent","isValidBlockContent","getCategories","setCategories","updateCategory","registerBlockType","unregisterBlockType","setFreeformContentHandlerName","getFreeformContentHandlerName","setUnregisteredTypeHandlerName","getUnregisteredTypeHandlerName","setDefaultBlockName","getDefaultBlockName","getBlockType","getBlockTypes","getBlockSupport","hasBlockSupport","isReusableBlock","getChildBlockNames","hasChildBlocks","hasChildBlocksWithInserterSupport","unstable__bootstrapServerSideBlockDefinitions","registerBlockStyle","unregisterBlockStyle","isUnmodifiedDefaultBlock","normalizeIconObject","isValidIcon","doBlocksMatchTemplate","synchronizeBlocksWithTemplate","children","node"],"mappings":"AAAA,SACCA,WADD,EAECC,UAFD,EAGCC,+BAHD,EAICC,iBAJD,EAKCC,kBALD,EAMCC,aAND,QAOO,WAPP;AAQA,SACCC,OAAO,IAAIC,KADZ,EAECC,kBAFD,EAGCC,wBAHD,QAIO,UAJP;AAKA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,wBAAnC,QAAmE,gBAAnE;AACA,SACCN,OAAO,IAAIO,SADZ,EAECC,eAFD,EAGCC,wBAHD,EAICC,4BAJD,EAKCC,cALD,EAMCC,cAND,QAOO,cAPP;AAQA,SAASC,mBAAT,QAAoC,cAApC;AACA,SACCC,aADD,EAECC,aAFD,EAGCC,cAHD,QAIO,cAJP;AAKA,SACCC,iBADD,EAECC,mBAFD,EAGCC,6BAHD,EAICC,6BAJD,EAKCC,8BALD,EAMCC,8BAND,EAOCC,mBAPD,EAQCC,mBARD,EASCC,YATD,EAUCC,aAVD,EAWCC,eAXD,EAYCC,eAZD,EAaCC,eAbD,EAcCC,kBAdD,EAeCC,cAfD,EAgBCC,iCAhBD,EAiBCC,6CAjBD,EAiBgD;AAC/CC,kBAlBD,EAmBCC,oBAnBD,QAoBO,gBApBP;AAqBA,SACCC,wBADD,EAECC,mBAFD,EAGCC,WAHD,QAIO,SAJP;AAKA,SACCC,qBADD,EAECC,6BAFD,QAGO,aAHP;AAIA,SAASxC,OAAO,IAAIyC,QAApB,QAAoC,YAApC;AACA,SAASzC,OAAO,IAAI0C,IAApB,QAAgC,QAAhC","sourcesContent":["export {\n\tcreateBlock,\n\tcloneBlock,\n\tgetPossibleBlockTransformations,\n\tswitchToBlockType,\n\tgetBlockTransforms,\n\tfindTransform,\n} from './factory';\nexport {\n\tdefault as parse,\n\tgetBlockAttributes,\n\tparseWithAttributeSchema,\n} from './parser';\nexport { pasteHandler, rawHandler, getPhrasingContentSchema } from './raw-handling';\nexport {\n\tdefault as serialize,\n\tgetBlockContent,\n\tgetBlockDefaultClassName,\n\tgetBlockMenuDefaultClassName,\n\tgetSaveElement,\n\tgetSaveContent,\n} from './serializer';\nexport { isValidBlockContent } from './validation';\nexport {\n\tgetCategories,\n\tsetCategories,\n\tupdateCategory,\n} from './categories';\nexport {\n\tregisterBlockType,\n\tunregisterBlockType,\n\tsetFreeformContentHandlerName,\n\tgetFreeformContentHandlerName,\n\tsetUnregisteredTypeHandlerName,\n\tgetUnregisteredTypeHandlerName,\n\tsetDefaultBlockName,\n\tgetDefaultBlockName,\n\tgetBlockType,\n\tgetBlockTypes,\n\tgetBlockSupport,\n\thasBlockSupport,\n\tisReusableBlock,\n\tgetChildBlockNames,\n\thasChildBlocks,\n\thasChildBlocksWithInserterSupport,\n\tunstable__bootstrapServerSideBlockDefinitions, // eslint-disable-line camelcase\n\tregisterBlockStyle,\n\tunregisterBlockStyle,\n} from './registration';\nexport {\n\tisUnmodifiedDefaultBlock,\n\tnormalizeIconObject,\n\tisValidIcon,\n} from './utils';\nexport {\n\tdoBlocksMatchTemplate,\n\tsynchronizeBlocksWithTemplate,\n} from './templates';\nexport { default as children } from './children';\nexport { default as node } from './node';\n"]}