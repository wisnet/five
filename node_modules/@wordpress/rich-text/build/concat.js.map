{"version":3,"sources":["/Users/riad/Workspace/a8c/gutenberg/packages/rich-text/src/concat.js"],"names":["concat","values","reduce","accumlator","formats","text"],"mappings":";;;;;;;AAIA;;AAJA;;;;AAMA;;;;;;;;AAQO,SAASA,MAAT,GAA6B;AAAA,oCAATC,MAAS;AAATA,IAAAA,MAAS;AAAA;;AACnC,SAAO,wCAAkBA,MAAM,CAACC,MAAP,CAAe,UAAEC,UAAF;AAAA,QAAgBC,OAAhB,QAAgBA,OAAhB;AAAA,QAAyBC,IAAzB,QAAyBA,IAAzB;AAAA,WAAuC;AAC9EA,MAAAA,IAAI,EAAEF,UAAU,CAACE,IAAX,GAAkBA,IADsD;AAE9ED,MAAAA,OAAO,EAAED,UAAU,CAACC,OAAX,CAAmBJ,MAAnB,CAA2BI,OAA3B;AAFqE,KAAvC;AAAA,GAAf,CAAlB,CAAP;AAIA","sourcesContent":["/**\n * Internal dependencies\n */\n\nimport { normaliseFormats } from './normalise-formats';\n\n/**\n * Combine all Rich Text values into one. This is similar to\n * `String.prototype.concat`.\n *\n * @param {...[object]} values An array of all values to combine.\n *\n * @return {Object} A new value combining all given records.\n */\nexport function concat( ...values ) {\n\treturn normaliseFormats( values.reduce( ( accumlator, { formats, text } ) => ( {\n\t\ttext: accumlator.text + text,\n\t\tformats: accumlator.formats.concat( formats ),\n\t} ) ) );\n}\n"]}