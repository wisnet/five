{"version":3,"sources":["/Users/riad/Workspace/a8c/gutenberg/packages/blocks/src/api/raw-handling/special-comment-converter.js"],"names":["COMMENT_NODE","window","Node","node","doc","nodeType","nodeValue","createNextpage","indexOf","customText","slice","trim","sibling","noTeaser","nextSibling","createMore","createElement","dataset","block"],"mappings":";;;;;;;AAGA;;AAHA;;;;AAKA;;;IAGQA,Y,GAAiBC,MAAM,CAACC,I,CAAxBF,Y;AAER;;;;;;;;;;;;;;;;;AAgBe,kBAAUG,IAAV,EAAgBC,GAAhB,EAAsB;AACpC,MAAKD,IAAI,CAACE,QAAL,KAAkBL,YAAvB,EAAsC;AACrC;AACA;;AAED,MAAKG,IAAI,CAACG,SAAL,KAAmB,UAAxB,EAAqC;AACpC,sBAASH,IAAT,EAAeI,cAAc,CAAEH,GAAF,CAA7B;AACA;AACA;;AAED,MAAKD,IAAI,CAACG,SAAL,CAAeE,OAAf,CAAwB,MAAxB,MAAqC,CAA1C,EAA8C;AAC7C;AACA,QAAMC,UAAU,GAAGN,IAAI,CAACG,SAAL,CAAeI,KAAf,CAAsB,CAAtB,EAA0BC,IAA1B,EAAnB;AAEA;;;;;;AAKA,QAAIC,OAAO,GAAGT,IAAd;AACA,QAAIU,QAAQ,GAAG,KAAf;;AACA,WAAUD,OAAO,GAAGA,OAAO,CAACE,WAA5B,EAA4C;AAC3C,UACCF,OAAO,CAACP,QAAR,KAAqBL,YAArB,IACAY,OAAO,CAACN,SAAR,KAAsB,UAFvB,EAGE;AACDO,QAAAA,QAAQ,GAAG,IAAX;AACA,yBAAQD,OAAR;AACA;AACA;AACD;;AAED,sBAAST,IAAT,EAAeY,UAAU,CAAEN,UAAF,EAAcI,QAAd,EAAwBT,GAAxB,CAAzB;AACA;AACD;;AAED,SAASW,UAAT,CAAqBN,UAArB,EAAiCI,QAAjC,EAA2CT,GAA3C,EAAiD;AAChD,MAAMD,IAAI,GAAGC,GAAG,CAACY,aAAJ,CAAmB,UAAnB,CAAb;AACAb,EAAAA,IAAI,CAACc,OAAL,CAAaC,KAAb,GAAqB,WAArB;;AACA,MAAKT,UAAL,EAAkB;AACjBN,IAAAA,IAAI,CAACc,OAAL,CAAaR,UAAb,GAA0BA,UAA1B;AACA;;AACD,MAAKI,QAAL,EAAgB;AACf;AACAV,IAAAA,IAAI,CAACc,OAAL,CAAaJ,QAAb,GAAwB,EAAxB;AACA;;AACD,SAAOV,IAAP;AACA;;AAED,SAASI,cAAT,CAAyBH,GAAzB,EAA+B;AAC9B,MAAMD,IAAI,GAAGC,GAAG,CAACY,aAAJ,CAAmB,UAAnB,CAAb;AACAb,EAAAA,IAAI,CAACc,OAAL,CAAaC,KAAb,GAAqB,eAArB;AAEA,SAAOf,IAAP;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { remove, replace } from '@wordpress/dom';\n\n/**\n * Browser dependencies\n */\nconst { COMMENT_NODE } = window.Node;\n\n/**\n * Looks for `<!--nextpage-->` and `<!--more-->` comments, as well as the\n * `<!--more Some text-->` variant and its `<!--noteaser-->` companion,\n * and replaces them with a custom element representing a future block.\n *\n * The custom element is a way to bypass the rest of the `raw-handling`\n * transforms, which would eliminate other kinds of node with which to carry\n * `<!--more-->`'s data: nodes with `data` attributes, empty paragraphs, etc.\n *\n * The custom element is then expected to be recognized by any registered\n * block's `raw` transform.\n *\n * @param {Node}     node The node to be processed.\n * @param {Document} doc  The document of the node.\n * @return {void}\n */\nexport default function( node, doc ) {\n\tif ( node.nodeType !== COMMENT_NODE ) {\n\t\treturn;\n\t}\n\n\tif ( node.nodeValue === 'nextpage' ) {\n\t\treplace( node, createNextpage( doc ) );\n\t\treturn;\n\t}\n\n\tif ( node.nodeValue.indexOf( 'more' ) === 0 ) {\n\t\t// Grab any custom text in the comment.\n\t\tconst customText = node.nodeValue.slice( 4 ).trim();\n\n\t\t/*\n\t\t * When a `<!--more-->` comment is found, we need to look for any\n\t\t * `<!--noteaser-->` sibling, but it may not be a direct sibling\n\t\t * (whitespace typically lies in between)\n\t\t */\n\t\tlet sibling = node;\n\t\tlet noTeaser = false;\n\t\twhile ( ( sibling = sibling.nextSibling ) ) {\n\t\t\tif (\n\t\t\t\tsibling.nodeType === COMMENT_NODE &&\n\t\t\t\tsibling.nodeValue === 'noteaser'\n\t\t\t) {\n\t\t\t\tnoTeaser = true;\n\t\t\t\tremove( sibling );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treplace( node, createMore( customText, noTeaser, doc ) );\n\t}\n}\n\nfunction createMore( customText, noTeaser, doc ) {\n\tconst node = doc.createElement( 'wp-block' );\n\tnode.dataset.block = 'core/more';\n\tif ( customText ) {\n\t\tnode.dataset.customText = customText;\n\t}\n\tif ( noTeaser ) {\n\t\t// \"Boolean\" data attribute\n\t\tnode.dataset.noTeaser = '';\n\t}\n\treturn node;\n}\n\nfunction createNextpage( doc ) {\n\tconst node = doc.createElement( 'wp-block' );\n\tnode.dataset.block = 'core/nextpage';\n\n\treturn node;\n}\n"]}