{"version":3,"sources":["/Users/riad/Workspace/a8c/gutenberg/packages/blocks/src/api/raw-handling/ms-list-converter.js"],"names":["window","parseInt","isList","node","nodeName","doc","style","getAttribute","indexOf","matches","exec","level","prevNode","previousElementSibling","type","textContent","trim","slice","isNumeric","test","newListNode","createElement","setAttribute","parentNode","insertBefore","listNode","listType","listItem","receivingNode","removeChild","firstElementChild","firstChild","appendChild","lastElementChild"],"mappings":";;;;;;;AAAA;;;cAGqBA,M;IAAbC,Q,WAAAA,Q;;AAER,SAASC,MAAT,CAAiBC,IAAjB,EAAwB;AACvB,SAAOA,IAAI,CAACC,QAAL,KAAkB,IAAlB,IAA0BD,IAAI,CAACC,QAAL,KAAkB,IAAnD;AACA;;AAEc,kBAAUD,IAAV,EAAgBE,GAAhB,EAAsB;AACpC,MAAKF,IAAI,CAACC,QAAL,KAAkB,GAAvB,EAA6B;AAC5B;AACA;;AAED,MAAME,KAAK,GAAGH,IAAI,CAACI,YAAL,CAAmB,OAAnB,CAAd;;AAEA,MAAK,CAAED,KAAP,EAAe;AACd;AACA,GATmC,CAWpC;;;AACA,MAAKA,KAAK,CAACE,OAAN,CAAe,UAAf,MAAgC,CAAC,CAAtC,EAA0C;AACzC;AACA;;AAED,MAAMC,OAAO,GAAG,kCAAkCC,IAAlC,CAAwCJ,KAAxC,CAAhB;;AAEA,MAAK,CAAEG,OAAP,EAAiB;AAChB;AACA;;AAED,MAAIE,KAAK,GAAGV,QAAQ,CAAEQ,OAAO,CAAE,CAAF,CAAT,EAAgB,EAAhB,CAAR,GAA+B,CAA/B,IAAoC,CAAhD;AAEA,MAAMG,QAAQ,GAAGT,IAAI,CAACU,sBAAtB,CAxBoC,CA0BpC;;AACA,MAAK,CAAED,QAAF,IAAc,CAAEV,MAAM,CAAEU,QAAF,CAA3B,EAA0C;AACzC;AACA,QAAME,IAAI,GAAGX,IAAI,CAACY,WAAL,CAAiBC,IAAjB,GAAwBC,KAAxB,CAA+B,CAA/B,EAAkC,CAAlC,CAAb;AACA,QAAMC,SAAS,GAAG,UAAUC,IAAV,CAAgBL,IAAhB,CAAlB;AACA,QAAMM,WAAW,GAAGf,GAAG,CAACgB,aAAJ,CAAmBH,SAAS,GAAG,IAAH,GAAU,IAAtC,CAApB;;AAEA,QAAKA,SAAL,EAAiB;AAChBE,MAAAA,WAAW,CAACE,YAAZ,CAA0B,MAA1B,EAAkCR,IAAlC;AACA;;AAEDX,IAAAA,IAAI,CAACoB,UAAL,CAAgBC,YAAhB,CAA8BJ,WAA9B,EAA2CjB,IAA3C;AACA;;AAED,MAAMsB,QAAQ,GAAGtB,IAAI,CAACU,sBAAtB;AACA,MAAMa,QAAQ,GAAGD,QAAQ,CAACrB,QAA1B;AACA,MAAMuB,QAAQ,GAAGtB,GAAG,CAACgB,aAAJ,CAAmB,IAAnB,CAAjB;AAEA,MAAIO,aAAa,GAAGH,QAApB,CA5CoC,CA8CpC;;AACAtB,EAAAA,IAAI,CAAC0B,WAAL,CAAkB1B,IAAI,CAAC2B,iBAAvB,EA/CoC,CAiDpC;;AACA,SAAQ3B,IAAI,CAAC4B,UAAb,EAA0B;AACzBJ,IAAAA,QAAQ,CAACK,WAAT,CAAsB7B,IAAI,CAAC4B,UAA3B;AACA,GApDmC,CAsDpC;;;AACA,SAAQpB,KAAK,EAAb,EAAkB;AACjBiB,IAAAA,aAAa,GAAGA,aAAa,CAACK,gBAAd,IAAkCL,aAAlD,CADiB,CAGjB;;AACA,QAAK1B,MAAM,CAAE0B,aAAF,CAAX,EAA+B;AAC9BA,MAAAA,aAAa,GAAGA,aAAa,CAACK,gBAAd,IAAkCL,aAAlD;AACA;AACD,GA9DmC,CAgEpC;;;AACA,MAAK,CAAE1B,MAAM,CAAE0B,aAAF,CAAb,EAAiC;AAChCA,IAAAA,aAAa,GAAGA,aAAa,CAACI,WAAd,CAA2B3B,GAAG,CAACgB,aAAJ,CAAmBK,QAAnB,CAA3B,CAAhB;AACA,GAnEmC,CAqEpC;;;AACAE,EAAAA,aAAa,CAACI,WAAd,CAA2BL,QAA3B,EAtEoC,CAwEpC;;AACAxB,EAAAA,IAAI,CAACoB,UAAL,CAAgBM,WAAhB,CAA6B1B,IAA7B;AACA","sourcesContent":["/**\n * Browser dependencies\n */\nconst { parseInt } = window;\n\nfunction isList( node ) {\n\treturn node.nodeName === 'OL' || node.nodeName === 'UL';\n}\n\nexport default function( node, doc ) {\n\tif ( node.nodeName !== 'P' ) {\n\t\treturn;\n\t}\n\n\tconst style = node.getAttribute( 'style' );\n\n\tif ( ! style ) {\n\t\treturn;\n\t}\n\n\t// Quick check.\n\tif ( style.indexOf( 'mso-list' ) === -1 ) {\n\t\treturn;\n\t}\n\n\tconst matches = /mso-list\\s*:[^;]+level([0-9]+)/i.exec( style );\n\n\tif ( ! matches ) {\n\t\treturn;\n\t}\n\n\tlet level = parseInt( matches[ 1 ], 10 ) - 1 || 0;\n\n\tconst prevNode = node.previousElementSibling;\n\n\t// Add new list if no previous.\n\tif ( ! prevNode || ! isList( prevNode ) ) {\n\t\t// See https://html.spec.whatwg.org/multipage/grouping-content.html#attr-ol-type.\n\t\tconst type = node.textContent.trim().slice( 0, 1 );\n\t\tconst isNumeric = /[1iIaA]/.test( type );\n\t\tconst newListNode = doc.createElement( isNumeric ? 'ol' : 'ul' );\n\n\t\tif ( isNumeric ) {\n\t\t\tnewListNode.setAttribute( 'type', type );\n\t\t}\n\n\t\tnode.parentNode.insertBefore( newListNode, node );\n\t}\n\n\tconst listNode = node.previousElementSibling;\n\tconst listType = listNode.nodeName;\n\tconst listItem = doc.createElement( 'li' );\n\n\tlet receivingNode = listNode;\n\n\t// Remove the first span with list info.\n\tnode.removeChild( node.firstElementChild );\n\n\t// Add content.\n\twhile ( node.firstChild ) {\n\t\tlistItem.appendChild( node.firstChild );\n\t}\n\n\t// Change pointer depending on indentation level.\n\twhile ( level-- ) {\n\t\treceivingNode = receivingNode.lastElementChild || receivingNode;\n\n\t\t// If it's a list, move pointer to the last item.\n\t\tif ( isList( receivingNode ) ) {\n\t\t\treceivingNode = receivingNode.lastElementChild || receivingNode;\n\t\t}\n\t}\n\n\t// Make sure we append to a list.\n\tif ( ! isList( receivingNode ) ) {\n\t\treceivingNode = receivingNode.appendChild( doc.createElement( listType ) );\n\t}\n\n\t// Append the list item to the list.\n\treceivingNode.appendChild( listItem );\n\n\t// Remove the wrapper paragraph.\n\tnode.parentNode.removeChild( node );\n}\n"]}