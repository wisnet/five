{"version":3,"sources":["/Users/riad/Workspace/a8c/gutenberg/packages/rich-text/src/to-html-string.js"],"names":["toHTMLString","value","multilineTag","multilineWrapperTags","tree","createEmpty","append","getLastChild","getParent","isText","getText","remove","appendText","createChildrenHTML","children","length","parent","object","text","push","index","indexOf","splice","createElementHTML","type","attributes","attributeString","key","map","child","undefined","join"],"mappings":"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","sourcesContent":["/**\n * Internal dependencies\n */\n\nimport {\n\tescapeHTML,\n\tescapeAttribute,\n\tisValidAttributeName,\n} from '@wordpress/escape-html';\n\n/**\n * Internal dependencies\n */\n\nimport { toTree } from './to-tree';\n\n/**\n * Create an HTML string from a Rich Text value. If a `multilineTag` is\n * provided, text separated by a line separator will be wrapped in it.\n *\n * @param {Object} $1                      Named argements.\n * @param {Object} $1.value                Rich text value.\n * @param {string} $1.multilineTag         Multiline tag.\n * @param {Array}  $1.multilineWrapperTags Tags where lines can be found if\n *                                         nesting is possible.\n *\n * @return {string} HTML string.\n */\nexport function toHTMLString( { value, multilineTag, multilineWrapperTags } ) {\n\tconst tree = toTree( {\n\t\tvalue,\n\t\tmultilineTag,\n\t\tmultilineWrapperTags,\n\t\tcreateEmpty,\n\t\tappend,\n\t\tgetLastChild,\n\t\tgetParent,\n\t\tisText,\n\t\tgetText,\n\t\tremove,\n\t\tappendText,\n\t} );\n\n\treturn createChildrenHTML( tree.children );\n}\n\nfunction createEmpty() {\n\treturn {};\n}\n\nfunction getLastChild( { children } ) {\n\treturn children && children[ children.length - 1 ];\n}\n\nfunction append( parent, object ) {\n\tif ( typeof object === 'string' ) {\n\t\tobject = { text: object };\n\t}\n\n\tobject.parent = parent;\n\tparent.children = parent.children || [];\n\tparent.children.push( object );\n\treturn object;\n}\n\nfunction appendText( object, text ) {\n\tobject.text += text;\n}\n\nfunction getParent( { parent } ) {\n\treturn parent;\n}\n\nfunction isText( { text } ) {\n\treturn typeof text === 'string';\n}\n\nfunction getText( { text } ) {\n\treturn text;\n}\n\nfunction remove( object ) {\n\tconst index = object.parent.children.indexOf( object );\n\n\tif ( index !== -1 ) {\n\t\tobject.parent.children.splice( index, 1 );\n\t}\n\n\treturn object;\n}\n\nfunction createElementHTML( { type, attributes, object, children } ) {\n\tlet attributeString = '';\n\n\tfor ( const key in attributes ) {\n\t\tif ( ! isValidAttributeName( key ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tattributeString += ` ${ key }=\"${ escapeAttribute( attributes[ key ] ) }\"`;\n\t}\n\n\tif ( object ) {\n\t\treturn `<${ type }${ attributeString }>`;\n\t}\n\n\treturn `<${ type }${ attributeString }>${ createChildrenHTML( children ) }</${ type }>`;\n}\n\nfunction createChildrenHTML( children = [] ) {\n\treturn children.map( ( child ) => {\n\t\treturn child.text === undefined ? createElementHTML( child ) : escapeHTML( child.text );\n\t} ).join( '' );\n}\n"]}