{"version":3,"sources":["/Users/riad/Workspace/a8c/gutenberg/packages/components/src/popover/utils.js"],"names":["HEIGHT_OFFSET","isMobileViewport","window","innerWidth","isRTL","document","documentElement","dir","computePopoverXAxisPosition","anchorRect","contentSize","xAxis","chosenYAxis","width","anchorMidPoint","Math","round","left","centerAlignment","popoverLeft","contentWidth","leftAlignmentX","leftAlignment","rightAlignmentX","right","rightAlignment","chosenXAxis","chosenWidth","computePopoverYAxisPosition","yAxis","height","top","middleAlignment","popoverTop","contentHeight","innerHeight","topAlignment","bottomAlignment","bottom","chosenHeight","computePopoverPosition","position","expandOnMobile","split","yAxisPosition","xAxisPosition","isMobile"],"mappings":";;;AACA;;;AAGA,IAAMA,aAAa,GAAG,EAAtB,C,CAA0B;;AAC1B,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAMC,MAAM,CAACC,UAAP,GAAoB,GAA1B;AAAA,CAAzB;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAMC,QAAQ,CAACC,eAAT,CAAyBC,GAAzB,KAAiC,KAAvC;AAAA,CAAd;AAEA;;;;;;;;;;;;;AAWA,OAAO,SAASC,2BAAT,CAAsCC,UAAtC,EAAkDC,WAAlD,EAA+DC,KAA/D,EAAsEC,WAAtE,EAAoF;AAAA,MAClFC,KADkF,GACxEH,WADwE,CAClFG,KADkF,EAE1F;;AACA,MAAKF,KAAK,KAAK,MAAV,IAAoBP,KAAK,EAA9B,EAAmC;AAClCO,IAAAA,KAAK,GAAG,OAAR;AACA,GAFD,MAEO,IAAKA,KAAK,KAAK,OAAV,IAAqBP,KAAK,EAA/B,EAAoC;AAC1CO,IAAAA,KAAK,GAAG,MAAR;AACA,GAPyF,CAS1F;;;AACA,MAAMG,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAYP,UAAU,CAACQ,IAAX,GAAoBR,UAAU,CAACI,KAAX,GAAmB,CAAnD,CAAvB;AACA,MAAMK,eAAe,GAAG;AACvBC,IAAAA,WAAW,EAAEL,cADU;AAEvBM,IAAAA,YAAY,EACX,CAAEN,cAAc,GAAKD,KAAK,GAAG,CAA3B,GAAiC,CAAjC,GAAuCA,KAAK,GAAG,CAA/C,GAAqDC,cAAvD,KACEA,cAAc,GAAKD,KAAK,GAAG,CAA3B,GAAiCX,MAAM,CAACC,UAAxC,GAAqDD,MAAM,CAACC,UAAP,GAAoBW,cAAzE,GAA4FD,KAAK,GAAG,CADtG;AAHsB,GAAxB;AAOA,MAAMQ,cAAc,GAAGT,WAAW,KAAK,QAAhB,GAA2BH,UAAU,CAACQ,IAAtC,GAA6CH,cAApE;AACA,MAAMQ,aAAa,GAAG;AACrBH,IAAAA,WAAW,EAAEE,cADQ;AAErBD,IAAAA,YAAY,EAAEC,cAAc,GAAGR,KAAjB,GAAyB,CAAzB,GAA6BA,KAA7B,GAAqCQ;AAF9B,GAAtB;AAIA,MAAME,eAAe,GAAGX,WAAW,KAAK,QAAhB,GAA2BH,UAAU,CAACe,KAAtC,GAA8CV,cAAtE;AACA,MAAMW,cAAc,GAAG;AACtBN,IAAAA,WAAW,EAAEI,eADS;AAEtBH,IAAAA,YAAY,EAAEG,eAAe,GAAGV,KAAlB,GAA0BX,MAAM,CAACC,UAAjC,GAA8CD,MAAM,CAACC,UAAP,GAAoBoB,eAAlE,GAAoFV;AAF5E,GAAvB,CAxB0F,CA6B1F;;AACA,MAAIa,WAAJ;AACA,MAAIN,YAAY,GAAG,IAAnB;;AACA,MAAKT,KAAK,KAAK,QAAV,IAAsBO,eAAe,CAACE,YAAhB,KAAiCP,KAA5D,EAAoE;AACnEa,IAAAA,WAAW,GAAG,QAAd;AACA,GAFD,MAEO,IAAKf,KAAK,KAAK,MAAV,IAAoBW,aAAa,CAACF,YAAd,KAA+BP,KAAxD,EAAgE;AACtEa,IAAAA,WAAW,GAAG,MAAd;AACA,GAFM,MAEA,IAAKf,KAAK,KAAK,OAAV,IAAqBc,cAAc,CAACL,YAAf,KAAgCP,KAA1D,EAAkE;AACxEa,IAAAA,WAAW,GAAG,OAAd;AACA,GAFM,MAEA;AACNA,IAAAA,WAAW,GAAGJ,aAAa,CAACF,YAAd,GAA6BK,cAAc,CAACL,YAA5C,GAA2D,MAA3D,GAAoE,OAAlF;AACA,QAAMO,WAAW,GAAGD,WAAW,KAAK,MAAhB,GAAyBJ,aAAa,CAACF,YAAvC,GAAsDK,cAAc,CAACL,YAAzF;AACAA,IAAAA,YAAY,GAAGO,WAAW,KAAKd,KAAhB,GAAwBc,WAAxB,GAAsC,IAArD;AACA;;AAED,MAAIR,WAAJ;;AACA,MAAKO,WAAW,KAAK,QAArB,EAAgC;AAC/BP,IAAAA,WAAW,GAAGD,eAAe,CAACC,WAA9B;AACA,GAFD,MAEO,IAAKO,WAAW,KAAK,MAArB,EAA8B;AACpCP,IAAAA,WAAW,GAAGG,aAAa,CAACH,WAA5B;AACA,GAFM,MAEA;AACNA,IAAAA,WAAW,GAAGM,cAAc,CAACN,WAA7B;AACA;;AAED,SAAO;AACNR,IAAAA,KAAK,EAAEe,WADD;AAENP,IAAAA,WAAW,EAAXA,WAFM;AAGNC,IAAAA,YAAY,EAAZA;AAHM,GAAP;AAKA;AAED;;;;;;;;;;;AAUA,OAAO,SAASQ,2BAAT,CAAsCnB,UAAtC,EAAkDC,WAAlD,EAA+DmB,KAA/D,EAAuE;AAAA,MACrEC,MADqE,GAC1DpB,WAD0D,CACrEoB,MADqE,EAG7E;;AACA,MAAMhB,cAAc,GAAGL,UAAU,CAACsB,GAAX,GAAmBtB,UAAU,CAACqB,MAAX,GAAoB,CAA9D;AACA,MAAME,eAAe,GAAG;AACvBC,IAAAA,UAAU,EAAEnB,cADW;AAEvBoB,IAAAA,aAAa,EACZ,CAAEpB,cAAc,GAAKgB,MAAM,GAAG,CAA5B,GAAkC,CAAlC,GAAwCA,MAAM,GAAG,CAAjD,GAAuDhB,cAAzD,KACEA,cAAc,GAAKgB,MAAM,GAAG,CAA5B,GAAkC5B,MAAM,CAACiC,WAAzC,GAAuDjC,MAAM,CAACiC,WAAP,GAAqBrB,cAA5E,GAA+FgB,MAAM,GAAG,CAD1G;AAHsB,GAAxB;AAOA,MAAMM,YAAY,GAAG;AACpBH,IAAAA,UAAU,EAAExB,UAAU,CAACsB,GADH;AAEpBG,IAAAA,aAAa,EAAEzB,UAAU,CAACsB,GAAX,GAAiB/B,aAAjB,GAAiC8B,MAAjC,GAA0C,CAA1C,GAA8CA,MAA9C,GAAuDrB,UAAU,CAACsB,GAAX,GAAiB/B;AAFnE,GAArB;AAIA,MAAMqC,eAAe,GAAG;AACvBJ,IAAAA,UAAU,EAAExB,UAAU,CAAC6B,MADA;AAEvBJ,IAAAA,aAAa,EAAEzB,UAAU,CAAC6B,MAAX,GAAoBtC,aAApB,GAAoC8B,MAApC,GAA6C5B,MAAM,CAACiC,WAApD,GAAkEjC,MAAM,CAACiC,WAAP,GAAqBnC,aAArB,GAAqCS,UAAU,CAAC6B,MAAlH,GAA2HR;AAFnH,GAAxB,CAhB6E,CAqB7E;;AACA,MAAIlB,WAAJ;AACA,MAAIsB,aAAa,GAAG,IAApB;;AACA,MAAKL,KAAK,KAAK,QAAV,IAAsBG,eAAe,CAACE,aAAhB,KAAkCJ,MAA7D,EAAsE;AACrElB,IAAAA,WAAW,GAAG,QAAd;AACA,GAFD,MAEO,IAAKiB,KAAK,KAAK,KAAV,IAAmBO,YAAY,CAACF,aAAb,KAA+BJ,MAAvD,EAAgE;AACtElB,IAAAA,WAAW,GAAG,KAAd;AACA,GAFM,MAEA,IAAKiB,KAAK,KAAK,QAAV,IAAsBQ,eAAe,CAACH,aAAhB,KAAkCJ,MAA7D,EAAsE;AAC5ElB,IAAAA,WAAW,GAAG,QAAd;AACA,GAFM,MAEA;AACNA,IAAAA,WAAW,GAAGwB,YAAY,CAACF,aAAb,GAA6BG,eAAe,CAACH,aAA7C,GAA6D,KAA7D,GAAqE,QAAnF;AACA,QAAMK,YAAY,GAAG3B,WAAW,KAAK,KAAhB,GAAwBwB,YAAY,CAACF,aAArC,GAAqDG,eAAe,CAACH,aAA1F;AACAA,IAAAA,aAAa,GAAGK,YAAY,KAAKT,MAAjB,GAA0BS,YAA1B,GAAyC,IAAzD;AACA;;AAED,MAAIN,UAAJ;;AACA,MAAKrB,WAAW,KAAK,QAArB,EAAgC;AAC/BqB,IAAAA,UAAU,GAAGD,eAAe,CAACC,UAA7B;AACA,GAFD,MAEO,IAAKrB,WAAW,KAAK,KAArB,EAA6B;AACnCqB,IAAAA,UAAU,GAAGG,YAAY,CAACH,UAA1B;AACA,GAFM,MAEA;AACNA,IAAAA,UAAU,GAAGI,eAAe,CAACJ,UAA7B;AACA;;AAED,SAAO;AACNJ,IAAAA,KAAK,EAAEjB,WADD;AAENqB,IAAAA,UAAU,EAAVA,UAFM;AAGNC,IAAAA,aAAa,EAAbA;AAHM,GAAP;AAKA;AAED;;;;;;;;;;;;AAWA,OAAO,SAASM,sBAAT,CAAiC/B,UAAjC,EAA6CC,WAA7C,EAAqG;AAAA,MAA3C+B,QAA2C,uEAAhC,KAAgC;AAAA,MAAzBC,cAAyB,uEAAR,KAAQ;;AAAA,wBACvED,QAAQ,CAACE,KAAT,CAAgB,GAAhB,CADuE;AAAA;AAAA,MACnGd,KADmG;AAAA;AAAA,MAC5FlB,KAD4F,kCACpF,QADoF;;AAG3G,MAAMiC,aAAa,GAAGhB,2BAA2B,CAAEnB,UAAF,EAAcC,WAAd,EAA2BmB,KAA3B,CAAjD;AACA,MAAMgB,aAAa,GAAGrC,2BAA2B,CAAEC,UAAF,EAAcC,WAAd,EAA2BC,KAA3B,EAAkCiC,aAAa,CAACf,KAAhD,CAAjD;AAEA;AACCiB,IAAAA,QAAQ,EAAE7C,gBAAgB,MAAMyC;AADjC,KAEIG,aAFJ,EAGID,aAHJ;AAKA","sourcesContent":["\n/**\n * Module constants\n */\nconst HEIGHT_OFFSET = 10; // used by the arrow and a bit of empty space\nconst isMobileViewport = () => window.innerWidth < 782;\nconst isRTL = () => document.documentElement.dir === 'rtl';\n\n/**\n * Utility used to compute the popover position over the xAxis\n *\n * @param {Object} anchorRect       Anchor Rect.\n * @param {Object} contentSize      Content Size.\n * @param {string} xAxis            Desired xAxis.\n * @param {string} chosenYAxis      yAxis to be used.\n * @param {boolean} expandOnMobile  Whether to expand the popover on mobile or not.\n *\n * @return {Object} Popover xAxis position and constraints.\n */\nexport function computePopoverXAxisPosition( anchorRect, contentSize, xAxis, chosenYAxis ) {\n\tconst { width } = contentSize;\n\t// Correct xAxis for RTL support\n\tif ( xAxis === 'left' && isRTL() ) {\n\t\txAxis = 'right';\n\t} else if ( xAxis === 'right' && isRTL() ) {\n\t\txAxis = 'left';\n\t}\n\n\t// x axis alignment choices\n\tconst anchorMidPoint = Math.round( anchorRect.left + ( anchorRect.width / 2 ) );\n\tconst centerAlignment = {\n\t\tpopoverLeft: anchorMidPoint,\n\t\tcontentWidth: (\n\t\t\t( anchorMidPoint - ( width / 2 ) > 0 ? ( width / 2 ) : anchorMidPoint ) +\n\t\t\t( anchorMidPoint + ( width / 2 ) > window.innerWidth ? window.innerWidth - anchorMidPoint : ( width / 2 ) )\n\t\t),\n\t};\n\tconst leftAlignmentX = chosenYAxis === 'middle' ? anchorRect.left : anchorMidPoint;\n\tconst leftAlignment = {\n\t\tpopoverLeft: leftAlignmentX,\n\t\tcontentWidth: leftAlignmentX - width > 0 ? width : leftAlignmentX,\n\t};\n\tconst rightAlignmentX = chosenYAxis === 'middle' ? anchorRect.right : anchorMidPoint;\n\tconst rightAlignment = {\n\t\tpopoverLeft: rightAlignmentX,\n\t\tcontentWidth: rightAlignmentX + width > window.innerWidth ? window.innerWidth - rightAlignmentX : width,\n\t};\n\n\t// Choosing the x axis\n\tlet chosenXAxis;\n\tlet contentWidth = null;\n\tif ( xAxis === 'center' && centerAlignment.contentWidth === width ) {\n\t\tchosenXAxis = 'center';\n\t} else if ( xAxis === 'left' && leftAlignment.contentWidth === width ) {\n\t\tchosenXAxis = 'left';\n\t} else if ( xAxis === 'right' && rightAlignment.contentWidth === width ) {\n\t\tchosenXAxis = 'right';\n\t} else {\n\t\tchosenXAxis = leftAlignment.contentWidth > rightAlignment.contentWidth ? 'left' : 'right';\n\t\tconst chosenWidth = chosenXAxis === 'left' ? leftAlignment.contentWidth : rightAlignment.contentWidth;\n\t\tcontentWidth = chosenWidth !== width ? chosenWidth : null;\n\t}\n\n\tlet popoverLeft;\n\tif ( chosenXAxis === 'center' ) {\n\t\tpopoverLeft = centerAlignment.popoverLeft;\n\t} else if ( chosenXAxis === 'left' ) {\n\t\tpopoverLeft = leftAlignment.popoverLeft;\n\t} else {\n\t\tpopoverLeft = rightAlignment.popoverLeft;\n\t}\n\n\treturn {\n\t\txAxis: chosenXAxis,\n\t\tpopoverLeft,\n\t\tcontentWidth,\n\t};\n}\n\n/**\n * Utility used to compute the popover position over the yAxis\n *\n * @param {Object} anchorRect       Anchor Rect.\n * @param {Object} contentSize      Content Size.\n * @param {string} yAxis            Desired yAxis.\n * @param {boolean} expandOnMobile  Whether to expand the popover on mobile or not.\n *\n * @return {Object} Popover xAxis position and constraints.\n */\nexport function computePopoverYAxisPosition( anchorRect, contentSize, yAxis ) {\n\tconst { height } = contentSize;\n\n\t// y axis alignment choices\n\tconst anchorMidPoint = anchorRect.top + ( anchorRect.height / 2 );\n\tconst middleAlignment = {\n\t\tpopoverTop: anchorMidPoint,\n\t\tcontentHeight: (\n\t\t\t( anchorMidPoint - ( height / 2 ) > 0 ? ( height / 2 ) : anchorMidPoint ) +\n\t\t\t( anchorMidPoint + ( height / 2 ) > window.innerHeight ? window.innerHeight - anchorMidPoint : ( height / 2 ) )\n\t\t),\n\t};\n\tconst topAlignment = {\n\t\tpopoverTop: anchorRect.top,\n\t\tcontentHeight: anchorRect.top - HEIGHT_OFFSET - height > 0 ? height : anchorRect.top - HEIGHT_OFFSET,\n\t};\n\tconst bottomAlignment = {\n\t\tpopoverTop: anchorRect.bottom,\n\t\tcontentHeight: anchorRect.bottom + HEIGHT_OFFSET + height > window.innerHeight ? window.innerHeight - HEIGHT_OFFSET - anchorRect.bottom : height,\n\t};\n\n\t// Choosing the y axis\n\tlet chosenYAxis;\n\tlet contentHeight = null;\n\tif ( yAxis === 'middle' && middleAlignment.contentHeight === height ) {\n\t\tchosenYAxis = 'middle';\n\t} else if ( yAxis === 'top' && topAlignment.contentHeight === height ) {\n\t\tchosenYAxis = 'top';\n\t} else if ( yAxis === 'bottom' && bottomAlignment.contentHeight === height ) {\n\t\tchosenYAxis = 'bottom';\n\t} else {\n\t\tchosenYAxis = topAlignment.contentHeight > bottomAlignment.contentHeight ? 'top' : 'bottom';\n\t\tconst chosenHeight = chosenYAxis === 'top' ? topAlignment.contentHeight : bottomAlignment.contentHeight;\n\t\tcontentHeight = chosenHeight !== height ? chosenHeight : null;\n\t}\n\n\tlet popoverTop;\n\tif ( chosenYAxis === 'middle' ) {\n\t\tpopoverTop = middleAlignment.popoverTop;\n\t} else if ( chosenYAxis === 'top' ) {\n\t\tpopoverTop = topAlignment.popoverTop;\n\t} else {\n\t\tpopoverTop = bottomAlignment.popoverTop;\n\t}\n\n\treturn {\n\t\tyAxis: chosenYAxis,\n\t\tpopoverTop,\n\t\tcontentHeight,\n\t};\n}\n\n/**\n * Utility used to compute the popover position and the content max width/height for a popover\n * given its anchor rect and its content size.\n *\n * @param {Object} anchorRect       Anchor Rect.\n * @param {Object} contentSize      Content Size.\n * @param {string} position         Position.\n * @param {boolean} expandOnMobile  Whether to expand the popover on mobile or not.\n *\n * @return {Object} Popover position and constraints.\n */\nexport function computePopoverPosition( anchorRect, contentSize, position = 'top', expandOnMobile = false ) {\n\tconst [ yAxis, xAxis = 'center' ] = position.split( ' ' );\n\n\tconst yAxisPosition = computePopoverYAxisPosition( anchorRect, contentSize, yAxis );\n\tconst xAxisPosition = computePopoverXAxisPosition( anchorRect, contentSize, xAxis, yAxisPosition.yAxis );\n\n\treturn {\n\t\tisMobile: isMobileViewport() && expandOnMobile,\n\t\t...xAxisPosition,\n\t\t...yAxisPosition,\n\t};\n}\n"]}