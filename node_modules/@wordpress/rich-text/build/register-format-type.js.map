{"version":3,"sources":["/Users/riad/Workspace/a8c/gutenberg/packages/rich-text/src/register-format-type.js"],"names":["EMPTY_ARRAY","registerFormatType","name","settings","window","console","error","test","getFormatType","tagName","className","formatTypeForBareElement","getFormatTypeForBareElement","formatTypeForClassName","getFormatTypeForClassName","title","keywords","length","addFormatTypes","getFunctionStackMemoized","previousStack","newFunction","__experimentalGetPropsForEditableTreePreparation","OriginalComponent","Component","__experimentalCreatePrepareEditableTree","__experimentalCreateFormatToValue","__experimentalCreateValueToFormat","props","additionalProps","prepareEditableTree","richTextIdentifier","identifier","blockClientId","clientId","__experimentalCreateOnChangeEditableValue","dispatchProps","Object","keys","reduce","accumulator","propKey","propValue","keyPrefix","startsWith","realKey","replace","onChangeEditableValue","hocs","sel","__experimentalGetPropsForEditableTreeChangeHandler","push","disp","value","key"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { mapKeys } from 'lodash';\nimport memize from 'memize';\n\n/**\n * WordPress dependencies\n */\nimport { select, dispatch, withSelect, withDispatch } from '@wordpress/data';\nimport { addFilter } from '@wordpress/hooks';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Shared reference to an empty array for cases where it is important to avoid\n * returning a new array reference on every invocation, as in a connected or\n * other pure component which performs `shouldComponentUpdate` check on props.\n * This should be used as a last resort, since the normalized data should be\n * maintained by the reducer result in state.\n *\n * @type {Array}\n */\nconst EMPTY_ARRAY = [];\n\n/**\n * Registers a new format provided a unique name and an object defining its\n * behavior.\n *\n * @param {string} name     Format name.\n * @param {Object} settings Format settings.\n *\n * @return {?WPFormat} The format, if it has been successfully registered;\n *                     otherwise `undefined`.\n */\nexport function registerFormatType( name, settings ) {\n\tsettings = {\n\t\tname,\n\t\t...settings,\n\t};\n\n\tif ( typeof settings.name !== 'string' ) {\n\t\twindow.console.error(\n\t\t\t'Format names must be strings.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( ! /^[a-z][a-z0-9-]*\\/[a-z][a-z0-9-]*$/.test( settings.name ) ) {\n\t\twindow.console.error(\n\t\t\t'Format names must contain a namespace prefix, include only lowercase alphanumeric characters or dashes, and start with a letter. Example: my-plugin/my-custom-format'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( select( 'core/rich-text' ).getFormatType( settings.name ) ) {\n\t\twindow.console.error(\n\t\t\t'Format \"' + settings.name + '\" is already registered.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif (\n\t\ttypeof settings.tagName !== 'string' ||\n\t\tsettings.tagName === ''\n\t) {\n\t\twindow.console.error(\n\t\t\t'Format tag names must be a string.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif (\n\t\t( typeof settings.className !== 'string' || settings.className === '' ) &&\n\t\tsettings.className !== null\n\t) {\n\t\twindow.console.error(\n\t\t\t'Format class names must be a string, or null to handle bare elements.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( ! /^[_a-zA-Z]+[a-zA-Z0-9-]*$/.test( settings.className ) ) {\n\t\twindow.console.error(\n\t\t\t'A class name must begin with a letter, followed by any number of hyphens, letters, or numbers.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( settings.className === null ) {\n\t\tconst formatTypeForBareElement = select( 'core/rich-text' )\n\t\t\t.getFormatTypeForBareElement( settings.tagName );\n\n\t\tif ( formatTypeForBareElement ) {\n\t\t\twindow.console.error(\n\t\t\t\t`Format \"${ formatTypeForBareElement.name }\" is already registered to handle bare tag name \"${ settings.tagName }\".`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t} else {\n\t\tconst formatTypeForClassName = select( 'core/rich-text' )\n\t\t\t.getFormatTypeForClassName( settings.className );\n\n\t\tif ( formatTypeForClassName ) {\n\t\t\twindow.console.error(\n\t\t\t\t`Format \"${ formatTypeForClassName.name }\" is already registered to handle class name \"${ settings.className }\".`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif ( ! ( 'title' in settings ) || settings.title === '' ) {\n\t\twindow.console.error(\n\t\t\t'The format \"' + settings.name + '\" must have a title.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( 'keywords' in settings && settings.keywords.length > 3 ) {\n\t\twindow.console.error(\n\t\t\t'The format \"' + settings.name + '\" can have a maximum of 3 keywords.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( typeof settings.title !== 'string' ) {\n\t\twindow.console.error(\n\t\t\t'Format titles must be strings.'\n\t\t);\n\t\treturn;\n\t}\n\n\tdispatch( 'core/rich-text' ).addFormatTypes( settings );\n\n\tconst getFunctionStackMemoized = memize( ( previousStack = EMPTY_ARRAY, newFunction ) => {\n\t\treturn [\n\t\t\t...previousStack,\n\t\t\tnewFunction,\n\t\t];\n\t} );\n\n\tif (\n\t\tsettings.__experimentalGetPropsForEditableTreePreparation\n\t) {\n\t\taddFilter( 'experimentalRichText', name, ( OriginalComponent ) => {\n\t\t\tlet Component = OriginalComponent;\n\t\t\tif (\n\t\t\t\tsettings.__experimentalCreatePrepareEditableTree ||\n\t\t\t\tsettings.__experimentalCreateFormatToValue ||\n\t\t\t\tsettings.__experimentalCreateValueToFormat\n\t\t\t) {\n\t\t\t\tComponent = ( props ) => {\n\t\t\t\t\tconst additionalProps = {};\n\n\t\t\t\t\tif ( settings.__experimentalCreatePrepareEditableTree ) {\n\t\t\t\t\t\tadditionalProps.prepareEditableTree = getFunctionStackMemoized(\n\t\t\t\t\t\t\tprops.prepareEditableTree,\n\t\t\t\t\t\t\tsettings.__experimentalCreatePrepareEditableTree( props[ `format_${ name }` ], {\n\t\t\t\t\t\t\t\trichTextIdentifier: props.identifier,\n\t\t\t\t\t\t\t\tblockClientId: props.clientId,\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( settings.__experimentalCreateOnChangeEditableValue ) {\n\t\t\t\t\t\tconst dispatchProps = Object.keys( props ).reduce( ( accumulator, propKey ) => {\n\t\t\t\t\t\t\tconst propValue = props[ propKey ];\n\t\t\t\t\t\t\tconst keyPrefix = `format_${ name }_dispatch_`;\n\t\t\t\t\t\t\tif ( propKey.startsWith( keyPrefix ) ) {\n\t\t\t\t\t\t\t\tconst realKey = propKey.replace( keyPrefix, '' );\n\n\t\t\t\t\t\t\t\taccumulator[ realKey ] = propValue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn accumulator;\n\t\t\t\t\t\t}, {} );\n\n\t\t\t\t\t\tadditionalProps.onChangeEditableValue = getFunctionStackMemoized(\n\t\t\t\t\t\t\tprops.onChangeEditableValue,\n\t\t\t\t\t\t\tsettings.__experimentalCreateOnChangeEditableValue( {\n\t\t\t\t\t\t\t\t...props[ `format_${ name }` ],\n\t\t\t\t\t\t\t\t...dispatchProps,\n\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\trichTextIdentifier: props.identifier,\n\t\t\t\t\t\t\t\tblockClientId: props.clientId,\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn <OriginalComponent\n\t\t\t\t\t\t{ ...props }\n\t\t\t\t\t\t{ ...additionalProps }\n\t\t\t\t\t/>;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst hocs = [\n\t\t\t\twithSelect( ( sel, { clientId, identifier } ) => ( {\n\t\t\t\t\t[ `format_${ name }` ]: settings.__experimentalGetPropsForEditableTreePreparation(\n\t\t\t\t\t\tsel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trichTextIdentifier: identifier,\n\t\t\t\t\t\t\tblockClientId: clientId,\n\t\t\t\t\t\t}\n\t\t\t\t\t),\n\t\t\t\t} ) ),\n\t\t\t];\n\n\t\t\tif ( settings.__experimentalGetPropsForEditableTreeChangeHandler ) {\n\t\t\t\thocs.push( withDispatch( ( disp, { clientId, identifier } ) => {\n\t\t\t\t\tconst dispatchProps = settings.__experimentalGetPropsForEditableTreeChangeHandler(\n\t\t\t\t\t\tdisp,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trichTextIdentifier: identifier,\n\t\t\t\t\t\t\tblockClientId: clientId,\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\treturn mapKeys( dispatchProps, ( value, key ) => {\n\t\t\t\t\t\treturn `format_${ name }_dispatch_${ key }`;\n\t\t\t\t\t} );\n\t\t\t\t} ) );\n\t\t\t}\n\n\t\t\treturn compose( hocs )( Component );\n\t\t} );\n\t}\n\n\treturn settings;\n}\n"]}