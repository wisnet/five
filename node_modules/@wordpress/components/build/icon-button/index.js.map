{"version":3,"sources":["/Users/riad/Workspace/a8c/gutenberg/packages/components/src/icon-button/index.js"],"names":["IconButton","props","icon","children","label","className","tooltip","shortcut","labelPosition","additionalProps","ariaPressed","classes","tooltipText","showTooltip","disabled","length","element","Component"],"mappings":";;;;;;;;;AASA;;;;;;;;;;;;;;;;AANA;;AACA;;AAUA;;AACA;;AACA;;AAhBA;;;;AAMA;;;;AAKA;;;AAOA;AACA;IACMA,U;;;;;;;;;;;;6BACI;AAAA,wBAC2F,KAAKC,KADhG;AAAA,UACAC,IADA,eACAA,IADA;AAAA,UACMC,QADN,eACMA,QADN;AAAA,UACgBC,KADhB,eACgBA,KADhB;AAAA,UACuBC,SADvB,eACuBA,SADvB;AAAA,UACkCC,OADlC,eACkCA,OADlC;AAAA,UAC2CC,QAD3C,eAC2CA,QAD3C;AAAA,UACqDC,aADrD,eACqDA,aADrD;AAAA,UACuEC,eADvE;AAAA,UAEgBC,WAFhB,GAEgC,KAAKT,KAFrC,CAEA,cAFA;AAGR,UAAMU,OAAO,GAAG,yBAAY,wBAAZ,EAAsCN,SAAtC,CAAhB;AACA,UAAMO,WAAW,GAAGN,OAAO,IAAIF,KAA/B,CAJQ,CAMR;;AACA,UAAMS,WAAW,GAAG,CAAEJ,eAAe,CAACK,QAAlB,MACnB;AACAR,MAAAA,OAAO,IACP;AACAC,MAAAA,QAFA,IAIC;AACA,OAAC,CAAEH,KAAH,MACA;AACE,OAAED,QAAF,IAAgB,qBAASA,QAAT,KAAuB,CAAEA,QAAQ,CAACY,MAFpD,KAGA;AACA,gBAAUT,OAXQ,CAApB;AAeA,UAAIU,OAAO,GACV,4BAAC,eAAD;AAAQ,sBAAaZ;AAArB,SAAkCK,eAAlC;AAAoD,QAAA,SAAS,EAAGE;AAAhE,UACG,sBAAUT,IAAV,IAAmB,4BAAC,iBAAD;AAAU,QAAA,IAAI,EAAGA,IAAjB;AAAwB,QAAA,WAAW,EAAGQ;AAAtC,QAAnB,GAA4ER,IAD/E,EAEGC,QAFH,CADD;;AAOA,UAAKU,WAAL,EAAmB;AAClBG,QAAAA,OAAO,GACN,4BAAC,gBAAD;AAAS,UAAA,IAAI,EAAGJ,WAAhB;AAA8B,UAAA,QAAQ,EAAGL,QAAzC;AAAoD,UAAA,QAAQ,EAAGC;AAA/D,WACGQ,OADH,CADD;AAKA;;AAED,aAAOA,OAAP;AACA;;;EAvCuBC,kB;;eA0CVjB,U","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { isArray, isString } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport Tooltip from '../tooltip';\nimport Button from '../button';\nimport Dashicon from '../dashicon';\n\n// This is intentionally a Component class, not a function component because it\n// is common to apply a ref to the button element (only supported in class)\nclass IconButton extends Component {\n\trender() {\n\t\tconst { icon, children, label, className, tooltip, shortcut, labelPosition, ...additionalProps } = this.props;\n\t\tconst { 'aria-pressed': ariaPressed } = this.props;\n\t\tconst classes = classnames( 'components-icon-button', className );\n\t\tconst tooltipText = tooltip || label;\n\n\t\t// Should show the tooltip if...\n\t\tconst showTooltip = ! additionalProps.disabled && (\n\t\t\t// an explicit tooltip is passed or...\n\t\t\ttooltip ||\n\t\t\t// there's a shortcut or...\n\t\t\tshortcut ||\n\t\t\t(\n\t\t\t\t// there's a label and...\n\t\t\t\t!! label &&\n\t\t\t\t// the children are empty and...\n\t\t\t\t( ! children || ( isArray( children ) && ! children.length ) ) &&\n\t\t\t\t// the tooltip is not explicitly disabled.\n\t\t\t\tfalse !== tooltip\n\t\t\t)\n\t\t);\n\n\t\tlet element = (\n\t\t\t<Button aria-label={ label } { ...additionalProps } className={ classes }>\n\t\t\t\t{ isString( icon ) ? <Dashicon icon={ icon } ariaPressed={ ariaPressed } /> : icon }\n\t\t\t\t{ children }\n\t\t\t</Button>\n\t\t);\n\n\t\tif ( showTooltip ) {\n\t\t\telement = (\n\t\t\t\t<Tooltip text={ tooltipText } shortcut={ shortcut } position={ labelPosition }>\n\t\t\t\t\t{ element }\n\t\t\t\t</Tooltip>\n\t\t\t);\n\t\t}\n\n\t\treturn element;\n\t}\n}\n\nexport default IconButton;\n"]}