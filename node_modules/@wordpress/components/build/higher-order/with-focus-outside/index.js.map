{"version":3,"sources":["/Users/riad/Workspace/a8c/gutenberg/packages/components/src/higher-order/with-focus-outside/index.js"],"names":["INPUT_BUTTON_TYPES","isFocusNormalizedButton","element","nodeName","type","WrappedComponent","arguments","bindNode","bind","cancelBlurCheck","queueBlurCheck","normalizeButtonFocus","node","event","persist","preventBlurCheck","blurCheckTimeout","setTimeout","handleFocusOutside","clearTimeout","target","isInteractionEnd","props","Component"],"mappings":";;;;;;;;;AAQA;;;;;;;;;;;;;;;;AALA;;AAMA;;AATA;;;;AAKA;;;;AAMA;;;;;;AAMA,IAAMA,kBAAkB,GAAG,CAC1B,QAD0B,EAE1B,QAF0B,CAA3B;AAKA;;;;;;;;;;;AAUA,SAASC,uBAAT,CAAkCC,OAAlC,EAA4C;AAC3C,UAASA,OAAO,CAACC,QAAjB;AACC,SAAK,GAAL;AACA,SAAK,QAAL;AACC,aAAO,IAAP;;AAED,SAAK,OAAL;AACC,aAAO,sBAAUH,kBAAV,EAA8BE,OAAO,CAACE,IAAtC,CAAP;AANF;;AASA,SAAO,KAAP;AACA;;eAEc,yCACd,UAAEC,gBAAF,EAAwB;AACvB;AAAA;AAAA;AAAA;;AACC,wBAAc;AAAA;;AAAA;AACb,iHAAUC,SAAV;AAEA,cAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,mFAAhB;AACA,cAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBD,IAArB,mFAAvB;AACA,cAAKE,cAAL,GAAsB,MAAKA,cAAL,CAAoBF,IAApB,mFAAtB;AACA,cAAKG,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BH,IAA1B,mFAA5B;AANa;AAOb;;AARF;AAAA;AAAA,+CAUwB;AACtB,eAAKC,eAAL;AACA;AAZF;AAAA;AAAA,iCAcWG,IAdX,EAckB;AAChB,cAAKA,IAAL,EAAY;AACX,iBAAKA,IAAL,GAAYA,IAAZ;AACA,WAFD,MAEO;AACN,mBAAO,KAAKA,IAAZ;AACA,iBAAKH,eAAL;AACA;AACD;AArBF;AAAA;AAAA,uCAuBiBI,KAvBjB,EAuByB;AAAA;;AACvB;AACA;AACAA,UAAAA,KAAK,CAACC,OAAN,GAHuB,CAKvB;;AACA,cAAK,KAAKC,gBAAV,EAA6B;AAC5B;AACA;;AAED,eAAKC,gBAAL,GAAwBC,UAAU,CAAE,YAAM;AACzC,gBAAK,eAAe,OAAO,MAAI,CAACL,IAAL,CAAUM,kBAArC,EAA0D;AACzD,cAAA,MAAI,CAACN,IAAL,CAAUM,kBAAV,CAA8BL,KAA9B;AACA;AACD,WAJiC,EAI/B,CAJ+B,CAAlC;AAKA;AAtCF;AAAA;AAAA,0CAwCmB;AACjBM,UAAAA,YAAY,CAAE,KAAKH,gBAAP,CAAZ;AACA;AAED;;;;;;;;;;;;AA5CD;AAAA;AAAA,6CAuDuBH,KAvDvB,EAuD+B;AAAA,cACrBT,IADqB,GACJS,KADI,CACrBT,IADqB;AAAA,cACfgB,MADe,GACJP,KADI,CACfO,MADe;AAG7B,cAAMC,gBAAgB,GAAG,sBAAU,CAAE,SAAF,EAAa,UAAb,CAAV,EAAqCjB,IAArC,CAAzB;;AAEA,cAAKiB,gBAAL,EAAwB;AACvB,iBAAKN,gBAAL,GAAwB,KAAxB;AACA,WAFD,MAEO,IAAKd,uBAAuB,CAAEmB,MAAF,CAA5B,EAAyC;AAC/C,iBAAKL,gBAAL,GAAwB,IAAxB;AACA;AACD;AAjEF;AAAA;AAAA,iCAmEU;AACR;AACA;;AAEA;AACA,iBACC;AACC,YAAA,OAAO,EAAG,KAAKN,eADhB;AAEC,YAAA,WAAW,EAAG,KAAKE,oBAFpB;AAGC,YAAA,SAAS,EAAG,KAAKA,oBAHlB;AAIC,YAAA,YAAY,EAAG,KAAKA,oBAJrB;AAKC,YAAA,UAAU,EAAG,KAAKA,oBALnB;AAMC,YAAA,MAAM,EAAG,KAAKD;AANf,aAQC,4BAAC,gBAAD;AACC,YAAA,GAAG,EAAG,KAAKH;AADZ,aAEM,KAAKe,KAFX,EARD,CADD;AAcA;AACA;AAvFF;AAAA;AAAA,MAAqBC,kBAArB;AAAA;AAyFA,CA3Fa,EA2FX,kBA3FW,C","sourcesContent":["/**\n * External dependencies\n */\nimport { includes } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { createHigherOrderComponent } from '@wordpress/compose';\n\n/**\n * Input types which are classified as button types, for use in considering\n * whether element is a (focus-normalized) button.\n *\n * @type {string[]}\n */\nconst INPUT_BUTTON_TYPES = [\n\t'button',\n\t'submit',\n];\n\n/**\n * Returns true if the given element is a button element subject to focus\n * normalization, or false otherwise.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\n *\n * @param {Element} element Element to test.\n *\n * @return {boolean} Whether element is a button.\n */\nfunction isFocusNormalizedButton( element ) {\n\tswitch ( element.nodeName ) {\n\t\tcase 'A':\n\t\tcase 'BUTTON':\n\t\t\treturn true;\n\n\t\tcase 'INPUT':\n\t\t\treturn includes( INPUT_BUTTON_TYPES, element.type );\n\t}\n\n\treturn false;\n}\n\nexport default createHigherOrderComponent(\n\t( WrappedComponent ) => {\n\t\treturn class extends Component {\n\t\t\tconstructor() {\n\t\t\t\tsuper( ...arguments );\n\n\t\t\t\tthis.bindNode = this.bindNode.bind( this );\n\t\t\t\tthis.cancelBlurCheck = this.cancelBlurCheck.bind( this );\n\t\t\t\tthis.queueBlurCheck = this.queueBlurCheck.bind( this );\n\t\t\t\tthis.normalizeButtonFocus = this.normalizeButtonFocus.bind( this );\n\t\t\t}\n\n\t\t\tcomponentWillUnmount() {\n\t\t\t\tthis.cancelBlurCheck();\n\t\t\t}\n\n\t\t\tbindNode( node ) {\n\t\t\t\tif ( node ) {\n\t\t\t\t\tthis.node = node;\n\t\t\t\t} else {\n\t\t\t\t\tdelete this.node;\n\t\t\t\t\tthis.cancelBlurCheck();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tqueueBlurCheck( event ) {\n\t\t\t\t// React does not allow using an event reference asynchronously\n\t\t\t\t// due to recycling behavior, except when explicitly persisted.\n\t\t\t\tevent.persist();\n\n\t\t\t\t// Skip blur check if clicking button. See `normalizeButtonFocus`.\n\t\t\t\tif ( this.preventBlurCheck ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.blurCheckTimeout = setTimeout( () => {\n\t\t\t\t\tif ( 'function' === typeof this.node.handleFocusOutside ) {\n\t\t\t\t\t\tthis.node.handleFocusOutside( event );\n\t\t\t\t\t}\n\t\t\t\t}, 0 );\n\t\t\t}\n\n\t\t\tcancelBlurCheck() {\n\t\t\t\tclearTimeout( this.blurCheckTimeout );\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Handles a mousedown or mouseup event to respectively assign and\n\t\t\t * unassign a flag for preventing blur check on button elements. Some\n\t\t\t * browsers, namely Firefox and Safari, do not emit a focus event on\n\t\t\t * button elements when clicked, while others do. The logic here\n\t\t\t * intends to normalize this as treating click on buttons as focus.\n\t\t\t *\n\t\t\t * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\n\t\t\t *\n\t\t\t * @param {MouseEvent} event Event for mousedown or mouseup.\n\t\t\t */\n\t\t\tnormalizeButtonFocus( event ) {\n\t\t\t\tconst { type, target } = event;\n\n\t\t\t\tconst isInteractionEnd = includes( [ 'mouseup', 'touchend' ], type );\n\n\t\t\t\tif ( isInteractionEnd ) {\n\t\t\t\t\tthis.preventBlurCheck = false;\n\t\t\t\t} else if ( isFocusNormalizedButton( target ) ) {\n\t\t\t\t\tthis.preventBlurCheck = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trender() {\n\t\t\t\t// Disable reason: See `normalizeButtonFocus` for browser-specific\n\t\t\t\t// focus event normalization.\n\n\t\t\t\t/* eslint-disable jsx-a11y/no-static-element-interactions */\n\t\t\t\treturn (\n\t\t\t\t\t<div\n\t\t\t\t\t\tonFocus={ this.cancelBlurCheck }\n\t\t\t\t\t\tonMouseDown={ this.normalizeButtonFocus }\n\t\t\t\t\t\tonMouseUp={ this.normalizeButtonFocus }\n\t\t\t\t\t\tonTouchStart={ this.normalizeButtonFocus }\n\t\t\t\t\t\tonTouchEnd={ this.normalizeButtonFocus }\n\t\t\t\t\t\tonBlur={ this.queueBlurCheck }\n\t\t\t\t\t>\n\t\t\t\t\t\t<WrappedComponent\n\t\t\t\t\t\t\tref={ this.bindNode }\n\t\t\t\t\t\t\t{ ...this.props } />\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t\t/* eslint-enable jsx-a11y/no-static-element-interactions */\n\t\t\t}\n\t\t};\n\t}, 'withFocusOutside'\n);\n"]}