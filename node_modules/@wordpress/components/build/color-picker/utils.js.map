{"version":3,"sources":["/Users/riad/Workspace/a8c/gutenberg/packages/components/src/color-picker/utils.js"],"names":["colorToState","data","oldHue","color","hex","hsl","toHsl","h","Math","round","s","l","hsv","toHsv","v","rgb","toRgb","toHex","transparent","a","source","getPointOffset","e","container","preventDefault","getBoundingClientRect","containerLeft","left","containerTop","top","width","height","x","pageX","touches","y","pageY","window","pageXOffset","pageYOffset","isValidHex","lh","String","charAt","length","isValid","simpleCheckForValidColor","keysToCheck","checked","passed","letter","isNaN","calculateAlphaChange","props","calculateHueChange","percent","calculateSaturationChange","saturation","bright"],"mappings":"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","sourcesContent":["/**\n * Parts of this source were derived and modified from react-color,\n * released under the MIT license.\n *\n * https://github.com/casesandberg/react-color/\n *\n * Copyright (c) 2015 Case Sandberg\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * External dependencies\n */\nimport { each } from 'lodash';\nimport tinycolor from 'tinycolor2';\n\n/**\n * Given a hex color, get all other color properties (rgb, alpha, etc).\n *\n * @param {Object|string} data A hex color string or an object with a hex property\n * @param {string} oldHue A reference to the hue of the previous color, otherwise dragging the saturation to zero will reset the current hue to zero as well. See https://github.com/casesandberg/react-color/issues/29#issuecomment-132686909.\n * @return {Object} An object of different color representations.\n */\nexport function colorToState( data = {}, oldHue = false ) {\n\tconst color = data.hex ? tinycolor( data.hex ) : tinycolor( data );\n\tconst hsl = color.toHsl();\n\thsl.h = Math.round( hsl.h );\n\thsl.s = Math.round( hsl.s * 100 );\n\thsl.l = Math.round( hsl.l * 100 );\n\tconst hsv = color.toHsv();\n\thsv.h = Math.round( hsv.h );\n\thsv.s = Math.round( hsv.s * 100 );\n\thsv.v = Math.round( hsv.v * 100 );\n\tconst rgb = color.toRgb();\n\tconst hex = color.toHex();\n\tif ( hsl.s === 0 ) {\n\t\thsl.h = oldHue || 0;\n\t\thsv.h = oldHue || 0;\n\t}\n\tconst transparent = hex === '000000' && rgb.a === 0;\n\n\treturn {\n\t\tcolor,\n\t\thex: transparent ? 'transparent' : `#${ hex }`,\n\t\thsl,\n\t\thsv,\n\t\toldHue: data.h || oldHue || hsl.h,\n\t\trgb,\n\t\tsource: data.source,\n\t};\n}\n\n/**\n * Get the top/left offsets of a point in a container, also returns the container width/height.\n *\n * @param {Event} e Mouse or touch event with a location coordinate.\n * @param {HTMLElement} container The container div, returned point is relative to this container.\n * @return {Object} An object of the offset positions & container size.\n */\nfunction getPointOffset( e, container ) {\n\te.preventDefault();\n\tconst {\n\t\tleft: containerLeft,\n\t\ttop: containerTop,\n\t\twidth,\n\t\theight,\n\t} = container.getBoundingClientRect();\n\tconst x = typeof e.pageX === 'number' ? e.pageX : e.touches[ 0 ].pageX;\n\tconst y = typeof e.pageY === 'number' ? e.pageY : e.touches[ 0 ].pageY;\n\tlet left = x - ( containerLeft + window.pageXOffset );\n\tlet top = y - ( containerTop + window.pageYOffset );\n\n\tif ( left < 0 ) {\n\t\tleft = 0;\n\t} else if ( left > width ) {\n\t\tleft = width;\n\t} else if ( top < 0 ) {\n\t\ttop = 0;\n\t} else if ( top > height ) {\n\t\ttop = height;\n\t}\n\n\treturn { top, left, width, height };\n}\n\n/**\n * Check if a string is a valid hex color code.\n *\n * @param {string} hex A possible hex color.\n * @return {boolean} True if the color is a valid hex color.\n */\nexport function isValidHex( hex ) {\n\t// disable hex4 and hex8\n\tconst lh = String( hex ).charAt( 0 ) === '#' ? 1 : 0;\n\treturn (\n\t\thex.length !== 4 + lh && hex.length < 7 + lh && tinycolor( hex ).isValid()\n\t);\n}\n\n/**\n * Check an object for any valid color properties.\n *\n * @param {Object} data A possible object representing a color.\n * @return {Object|boolean} If a valid representation of color, returns the data object. Otherwise returns false.\n */\nexport function simpleCheckForValidColor( data ) {\n\tconst keysToCheck = [ 'r', 'g', 'b', 'a', 'h', 's', 'l', 'v' ];\n\tlet checked = 0;\n\tlet passed = 0;\n\teach( keysToCheck, ( letter ) => {\n\t\tif ( data[ letter ] ) {\n\t\t\tchecked += 1;\n\t\t\tif ( ! isNaN( data[ letter ] ) ) {\n\t\t\t\tpassed += 1;\n\t\t\t}\n\t\t}\n\t} );\n\treturn checked === passed ? data : false;\n}\n\n/**\n * Calculate the current alpha based on a mouse or touch event\n *\n * @param {Event} e A mouse or touch event on the alpha bar.\n * @param {Object} props The current component props\n * @param {HTMLElement} container The container div for the alpha bar graph.\n * @return {Object|null} If the alpha value has changed, returns a new color object.\n */\nexport function calculateAlphaChange( e, props, container ) {\n\tconst { left, width } = getPointOffset( e, container );\n\tconst a = left < 0 ? 0 : Math.round( ( left * 100 ) / width ) / 100;\n\n\tif ( props.hsl.a !== a ) {\n\t\treturn {\n\t\t\th: props.hsl.h,\n\t\t\ts: props.hsl.s,\n\t\t\tl: props.hsl.l,\n\t\t\ta,\n\t\t\tsource: 'rgb',\n\t\t};\n\t}\n\treturn null;\n}\n\n/**\n * Calculate the current hue based on a mouse or touch event\n *\n * @param {Event} e A mouse or touch event on the hue bar.\n * @param {Object} props The current component props\n * @param {HTMLElement} container The container div for the hue bar graph.\n * @return {Object|null} If the hue value has changed, returns a new color object.\n */\nexport function calculateHueChange( e, props, container ) {\n\tconst { left, width } = getPointOffset( e, container );\n\tconst percent = ( left * 100 ) / width;\n\tconst h = left >= width ? 359 : ( 360 * percent ) / 100;\n\n\tif ( props.hsl.h !== h ) {\n\t\treturn {\n\t\t\th,\n\t\t\ts: props.hsl.s,\n\t\t\tl: props.hsl.l,\n\t\t\ta: props.hsl.a,\n\t\t\tsource: 'rgb',\n\t\t};\n\t}\n\treturn null;\n}\n\n/**\n * Calculate the current saturation & brightness based on a mouse or touch event\n *\n * @param {Event} e A mouse or touch event on the saturation graph.\n * @param {Object} props The current component props\n * @param {HTMLElement} container The container div for the 2D saturation graph.\n * @return {Object} Returns a new color object.\n */\nexport function calculateSaturationChange( e, props, container ) {\n\tconst { top, left, width, height } = getPointOffset( e, container );\n\tconst saturation = left < 0 ? 0 : ( left * 100 ) / width;\n\tlet bright = top >= height ? 0 : -( ( top * 100 ) / height ) + 100;\n\t// `v` values less than 1 are considered in the [0,1] range, causing unexpected behavior at the bottom\n\t// of the chart. To fix this, we assume any value less than 1 should be 0 brightness.\n\tif ( bright < 1 ) {\n\t\tbright = 0;\n\t}\n\n\treturn {\n\t\th: props.hsl.h,\n\t\ts: saturation,\n\t\tv: bright,\n\t\ta: props.hsl.a,\n\t\tsource: 'rgb',\n\t};\n}\n"]}