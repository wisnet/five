{"version":3,"sources":["/Users/riad/Workspace/a8c/gutenberg/packages/blocks/src/api/raw-handling/figure-content-reducer.js"],"names":["has","isPhrasingContent","isFigureContent","node","schema","tag","nodeName","toLowerCase","canHaveAnchor","doc","nodeToInsert","parentNode","childNodes","length","wrapper","parentElement","figure","createElement","insertBefore","appendChild"],"mappings":"AAAA;;;AAGA,SAASA,GAAT,QAAoB,QAApB;AAEA;;;;AAGA,SAASC,iBAAT,QAAkC,oBAAlC;AAEA;;;;;;;;;AAQA,SAASC,eAAT,CAA0BC,IAA1B,EAAgCC,MAAhC,EAAyC;AACxC,MAAMC,GAAG,GAAGF,IAAI,CAACG,QAAL,CAAcC,WAAd,EAAZ,CADwC,CAGxC;AACA;;AACA,MAAKF,GAAG,KAAK,YAAR,IAAwBJ,iBAAiB,CAAEE,IAAF,CAA9C,EAAyD;AACxD,WAAO,KAAP;AACA;;AAED,SAAOH,GAAG,CAAEI,MAAF,EAAU,CAAE,QAAF,EAAY,UAAZ,EAAwBC,GAAxB,CAAV,CAAV;AACA;AAED;;;;;;;;;;AAQA,SAASG,aAAT,CAAwBL,IAAxB,EAA8BC,MAA9B,EAAuC;AACtC,MAAMC,GAAG,GAAGF,IAAI,CAACG,QAAL,CAAcC,WAAd,EAAZ;AAEA,SAAOP,GAAG,CAAEI,MAAF,EAAU,CAAE,QAAF,EAAY,UAAZ,EAAwB,GAAxB,EAA6B,UAA7B,EAAyCC,GAAzC,CAAV,CAAV;AACA;AAED;;;;;;;;;;;;AAUA,eAAe,UAAUF,IAAV,EAAgBM,GAAhB,EAAqBL,MAArB,EAA8B;AAC5C,MAAK,CAAEF,eAAe,CAAEC,IAAF,EAAQC,MAAR,CAAtB,EAAyC;AACxC;AACA;;AAED,MAAIM,YAAY,GAAGP,IAAnB;AACA,MAAMQ,UAAU,GAAGR,IAAI,CAACQ,UAAxB,CAN4C,CAQ5C;AACA;;AACA,MACCH,aAAa,CAAEL,IAAF,EAAQC,MAAR,CAAb,IACAO,UAAU,CAACL,QAAX,KAAwB,GADxB,IAEAK,UAAU,CAACC,UAAX,CAAsBC,MAAtB,KAAiC,CAHlC,EAIE;AACDH,IAAAA,YAAY,GAAGP,IAAI,CAACQ,UAApB;AACA;;AAED,MAAIG,OAAO,GAAGJ,YAAd;;AAEA,SAAQI,OAAO,IAAIA,OAAO,CAACR,QAAR,KAAqB,GAAxC,EAA8C;AAC7CQ,IAAAA,OAAO,GAAGA,OAAO,CAACC,aAAlB;AACA;;AAED,MAAMC,MAAM,GAAGP,GAAG,CAACQ,aAAJ,CAAmB,QAAnB,CAAf;;AAEA,MAAKH,OAAL,EAAe;AACdA,IAAAA,OAAO,CAACH,UAAR,CAAmBO,YAAnB,CAAiCF,MAAjC,EAAyCF,OAAzC;AACA,GAFD,MAEO;AACNJ,IAAAA,YAAY,CAACC,UAAb,CAAwBO,YAAxB,CAAsCF,MAAtC,EAA8CN,YAA9C;AACA;;AAEDM,EAAAA,MAAM,CAACG,WAAP,CAAoBT,YAApB;AACA","sourcesContent":["/**\n * External dependencies\n */\nimport { has } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport { isPhrasingContent } from './phrasing-content';\n\n/**\n * Whether or not the given node is figure content.\n *\n * @param {Node}   node   The node to check.\n * @param {Object} schema The schema to use.\n *\n * @return {boolean} True if figure content, false if not.\n */\nfunction isFigureContent( node, schema ) {\n\tconst tag = node.nodeName.toLowerCase();\n\n\t// We are looking for tags that can be a child of the figure tag, excluding\n\t// `figcaption` and any phrasing content.\n\tif ( tag === 'figcaption' || isPhrasingContent( node ) ) {\n\t\treturn false;\n\t}\n\n\treturn has( schema, [ 'figure', 'children', tag ] );\n}\n\n/**\n * Whether or not the given node can have an anchor.\n *\n * @param {Node}   node   The node to check.\n * @param {Object} schema The schema to use.\n *\n * @return {boolean} True if it can, false if not.\n */\nfunction canHaveAnchor( node, schema ) {\n\tconst tag = node.nodeName.toLowerCase();\n\n\treturn has( schema, [ 'figure', 'children', 'a', 'children', tag ] );\n}\n\n/**\n * This filter takes figure content out of paragraphs, wraps it in a figure\n * element, and moves any anchors with it if needed.\n *\n * @param {Node}     node   The node to filter.\n * @param {Document} doc    The document of the node.\n * @param {Object}   schema The schema to use.\n *\n * @return {void}\n */\nexport default function( node, doc, schema ) {\n\tif ( ! isFigureContent( node, schema ) ) {\n\t\treturn;\n\t}\n\n\tlet nodeToInsert = node;\n\tconst parentNode = node.parentNode;\n\n\t// If the figure content can have an anchor and its parent is an anchor with\n\t// only the figure content, take the anchor out instead of just the content.\n\tif (\n\t\tcanHaveAnchor( node, schema ) &&\n\t\tparentNode.nodeName === 'A' &&\n\t\tparentNode.childNodes.length === 1\n\t) {\n\t\tnodeToInsert = node.parentNode;\n\t}\n\n\tlet wrapper = nodeToInsert;\n\n\twhile ( wrapper && wrapper.nodeName !== 'P' ) {\n\t\twrapper = wrapper.parentElement;\n\t}\n\n\tconst figure = doc.createElement( 'figure' );\n\n\tif ( wrapper ) {\n\t\twrapper.parentNode.insertBefore( figure, wrapper );\n\t} else {\n\t\tnodeToInsert.parentNode.insertBefore( figure, nodeToInsert );\n\t}\n\n\tfigure.appendChild( nodeToInsert );\n}\n"]}