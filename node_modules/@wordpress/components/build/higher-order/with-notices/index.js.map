{"version":3,"sources":["/Users/riad/Workspace/a8c/gutenberg/packages/components/src/higher-order/with-notices/index.js"],"names":["OriginalComponent","arguments","createNotice","bind","createErrorNotice","removeNotice","removeAllNotices","state","noticeList","noticeOperations","notice","noticeToAdd","id","setState","msg","status","content","filter","length","props","Component"],"mappings":";;;;;;;;;AAQA;;;;;;;;;;;;;;;;;;;;AALA;;AAMA;;AAKA;;AAdA;;;;AAKA;;;;AAMA;;;;AAKA;;;;;;eAMe,yCAA4B,UAAEA,iBAAF,EAAyB;AACnE;AAAA;AAAA;AAAA;;AACC,kCAAc;AAAA;;AAAA;AACb,2HAAUC,SAAV;AAEA,cAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,mFAApB;AACA,cAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBD,IAAvB,mFAAzB;AACA,cAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,mFAApB;AACA,cAAKG,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBH,IAAtB,mFAAxB;AAEA,cAAKI,KAAL,GAAa;AACZC,UAAAA,UAAU,EAAE;AADA,SAAb;AAIA,cAAKC,gBAAL,GAAwB;AACvBP,UAAAA,YAAY,EAAE,MAAKA,YADI;AAEvBE,UAAAA,iBAAiB,EAAE,MAAKA,iBAFD;AAGvBE,UAAAA,gBAAgB,EAAE,MAAKA,gBAHA;AAIvBD,UAAAA,YAAY,EAAE,MAAKA;AAJI,SAAxB;AAZa;AAkBb;AAED;;;;;;;AArBD;AAAA;AAAA,qCA0BeK,MA1Bf,EA0BwB;AACtB,cAAMC,WAAW,GAAGD,MAAM,CAACE,EAAP,GAAYF,MAAZ,mCAA0BA,MAA1B;AAAkCE,YAAAA,EAAE,EAAE;AAAtC,YAApB;AACA,eAAKC,QAAL,CAAe,UAAEN,KAAF;AAAA,mBAAe;AAC7BC,cAAAA,UAAU,mCAAOD,KAAK,CAACC,UAAb,UAAyBG,WAAzB;AADmB,aAAf;AAAA,WAAf;AAGA;AAED;;;;;;AAjCD;AAAA;AAAA,0CAsCoBG,GAtCpB,EAsC0B;AACxB,eAAKZ,YAAL,CAAmB;AAAEa,YAAAA,MAAM,EAAE,OAAV;AAAmBC,YAAAA,OAAO,EAAEF;AAA5B,WAAnB;AACA;AAED;;;;;;AA1CD;AAAA;AAAA,qCA+CeF,EA/Cf,EA+CoB;AAClB,eAAKC,QAAL,CAAe,UAAEN,KAAF;AAAA,mBAAe;AAC7BC,cAAAA,UAAU,EAAED,KAAK,CAACC,UAAN,CAAiBS,MAAjB,CAAyB,UAAEP,MAAF;AAAA,uBAAcA,MAAM,CAACE,EAAP,KAAcA,EAA5B;AAAA,eAAzB;AADiB,aAAf;AAAA,WAAf;AAGA;AAED;;;;AArDD;AAAA;AAAA,2CAwDoB;AAClB,eAAKC,QAAL,CAAe;AACdL,YAAAA,UAAU,EAAE;AADE,WAAf;AAGA;AA5DF;AAAA;AAAA,iCA8DU;AACR,iBACC,4BAAC,iBAAD;AACC,YAAA,UAAU,EAAG,KAAKD,KAAL,CAAWC,UADzB;AAEC,YAAA,gBAAgB,EAAG,KAAKC,gBAFzB;AAGC,YAAA,QAAQ,EACP,KAAKF,KAAL,CAAWC,UAAX,CAAsBU,MAAtB,GAA+B,CAA/B,IAAoC,4BAAC,aAAD;AACnC,cAAA,SAAS,EAAC,4BADyB;AAEnC,cAAA,OAAO,EAAG,KAAKX,KAAL,CAAWC,UAFc;AAGnC,cAAA,QAAQ,EAAG,KAAKH;AAHmB;AAJtC,aAUM,KAAKc,KAVX,EADD;AAcA;AA7EF;AAAA;AAAA,MAAsCC,kBAAtC;AAAA;AA+EA,CAhFc,C","sourcesContent":["/**\n * External dependencies\n */\nimport uuid from 'uuid/v4';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { createHigherOrderComponent } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport NoticeList from '../../notice/list';\n\n/**\n * Override the default edit UI to include notices if supported.\n *\n * @param  {function|Component} OriginalComponent Original component.\n * @return {Component}                            Wrapped component.\n */\nexport default createHigherOrderComponent( ( OriginalComponent ) => {\n\treturn class WrappedBlockEdit extends Component {\n\t\tconstructor() {\n\t\t\tsuper( ...arguments );\n\n\t\t\tthis.createNotice = this.createNotice.bind( this );\n\t\t\tthis.createErrorNotice = this.createErrorNotice.bind( this );\n\t\t\tthis.removeNotice = this.removeNotice.bind( this );\n\t\t\tthis.removeAllNotices = this.removeAllNotices.bind( this );\n\n\t\t\tthis.state = {\n\t\t\t\tnoticeList: [],\n\t\t\t};\n\n\t\t\tthis.noticeOperations = {\n\t\t\t\tcreateNotice: this.createNotice,\n\t\t\t\tcreateErrorNotice: this.createErrorNotice,\n\t\t\t\tremoveAllNotices: this.removeAllNotices,\n\t\t\t\tremoveNotice: this.removeNotice,\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t* Function passed down as a prop that adds a new notice.\n\t\t*\n\t\t* @param {Object} notice  Notice to add.\n\t\t*/\n\t\tcreateNotice( notice ) {\n\t\t\tconst noticeToAdd = notice.id ? notice : { ...notice, id: uuid() };\n\t\t\tthis.setState( ( state ) => ( {\n\t\t\t\tnoticeList: [ ...state.noticeList, noticeToAdd ],\n\t\t\t} ) );\n\t\t}\n\n\t\t/**\n\t\t* Function passed as a prop that adds a new error notice.\n\t\t*\n\t\t* @param {string} msg  Error message of the notice.\n\t\t*/\n\t\tcreateErrorNotice( msg ) {\n\t\t\tthis.createNotice( { status: 'error', content: msg } );\n\t\t}\n\n\t\t/**\n\t\t* Removes a notice by id.\n\t\t*\n\t\t* @param {string} id  Id of the notice to remove.\n\t\t*/\n\t\tremoveNotice( id ) {\n\t\t\tthis.setState( ( state ) => ( {\n\t\t\t\tnoticeList: state.noticeList.filter( ( notice ) => notice.id !== id ),\n\t\t\t} ) );\n\t\t}\n\n\t\t/**\n\t\t* Removes all notices\n\t\t*/\n\t\tremoveAllNotices() {\n\t\t\tthis.setState( {\n\t\t\t\tnoticeList: [],\n\t\t\t} );\n\t\t}\n\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<OriginalComponent\n\t\t\t\t\tnoticeList={ this.state.noticeList }\n\t\t\t\t\tnoticeOperations={ this.noticeOperations }\n\t\t\t\t\tnoticeUI={\n\t\t\t\t\t\tthis.state.noticeList.length > 0 && <NoticeList\n\t\t\t\t\t\t\tclassName=\"components-with-notices-ui\"\n\t\t\t\t\t\t\tnotices={ this.state.noticeList }\n\t\t\t\t\t\t\tonRemove={ this.removeNotice }\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\t{ ...this.props }\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t};\n} );\n"]}