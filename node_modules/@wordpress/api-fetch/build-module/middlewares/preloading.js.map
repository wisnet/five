{"version":3,"sources":["/Users/riad/Workspace/a8c/gutenberg/packages/api-fetch/src/middlewares/preloading.js"],"names":["createPreloadingMiddleware","preloadedData","options","next","getStablePath","path","splitted","split","query","base","map","entry","sort","a","b","localeCompare","pair","join","parse","method","Promise","resolve","body"],"mappings":"AAAA,IAAMA,0BAA0B,GAAG,SAA7BA,0BAA6B,CAAEC,aAAF;AAAA,SAAqB,UAAEC,OAAF,EAAWC,IAAX,EAAqB;AAC5E,aAASC,aAAT,CAAwBC,IAAxB,EAA+B;AAC9B,UAAMC,QAAQ,GAAGD,IAAI,CAACE,KAAL,CAAY,GAAZ,CAAjB;AACA,UAAMC,KAAK,GAAGF,QAAQ,CAAE,CAAF,CAAtB;AACA,UAAMG,IAAI,GAAGH,QAAQ,CAAE,CAAF,CAArB;;AACA,UAAK,CAAEE,KAAP,EAAe;AACd,eAAOC,IAAP;AACA,OAN6B,CAQ9B;;;AACA,aAAOA,IAAI,GAAG,GAAP,GAAaD,KAAK,CACxB;AADwB,OAEvBD,KAFkB,CAEX,GAFW,EAGnB;AAHmB,OAIlBG,GAJkB,CAIb,UAAUC,KAAV,EAAkB;AACvB,eAAOA,KAAK,CAACJ,KAAN,CAAa,GAAb,CAAP;AACA,OANkB,EAOnB;AAPmB,OAQlBK,IARkB,CAQZ,UAAUC,CAAV,EAAaC,CAAb,EAAiB;AACvB,eAAOD,CAAC,CAAE,CAAF,CAAD,CAAOE,aAAP,CAAsBD,CAAC,CAAE,CAAF,CAAvB,CAAP;AACA,OAVkB,EAWnB;AAXmB,OAYlBJ,GAZkB,CAYb,UAAUM,IAAV,EAAiB;AACtB,eAAOA,IAAI,CAACC,IAAL,CAAW,GAAX,CAAP;AACA,OAdkB,EAenB;AAfmB,OAgBlBA,IAhBkB,CAgBZ,GAhBY,CAApB;AAiBA;;AA3B2E,yBA6BnDf,OA7BmD,CA6BpEgB,KA7BoE;AAAA,QA6BpEA,KA7BoE,+BA6B5D,IA7B4D;;AA8B5E,QAAK,OAAOhB,OAAO,CAACG,IAAf,KAAwB,QAA7B,EAAwC;AACvC,UAAMc,MAAM,GAAGjB,OAAO,CAACiB,MAAR,IAAkB,KAAjC;AACA,UAAMd,IAAI,GAAGD,aAAa,CAAEF,OAAO,CAACG,IAAV,CAA1B;;AAEA,UAAKa,KAAK,IAAI,UAAUC,MAAnB,IAA6BlB,aAAa,CAAEI,IAAF,CAA/C,EAA0D;AACzD,eAAOe,OAAO,CAACC,OAAR,CAAiBpB,aAAa,CAAEI,IAAF,CAAb,CAAsBiB,IAAvC,CAAP;AACA,OAFD,MAEO,IAAK,cAAcH,MAAd,IAAwBlB,aAAa,CAAEkB,MAAF,CAAb,CAAyBd,IAAzB,CAA7B,EAA+D;AACrE,eAAOe,OAAO,CAACC,OAAR,CAAiBpB,aAAa,CAAEkB,MAAF,CAAb,CAAyBd,IAAzB,CAAjB,CAAP;AACA;AACD;;AAED,WAAOF,IAAI,CAAED,OAAF,CAAX;AACA,GA1CkC;AAAA,CAAnC;;AA4CA,eAAeF,0BAAf","sourcesContent":["const createPreloadingMiddleware = ( preloadedData ) => ( options, next ) => {\n\tfunction getStablePath( path ) {\n\t\tconst splitted = path.split( '?' );\n\t\tconst query = splitted[ 1 ];\n\t\tconst base = splitted[ 0 ];\n\t\tif ( ! query ) {\n\t\t\treturn base;\n\t\t}\n\n\t\t// 'b=1&c=2&a=5'\n\t\treturn base + '?' + query\n\t\t\t// [ 'b=1', 'c=2', 'a=5' ]\n\t\t\t.split( '&' )\n\t\t\t// [ [ 'b, '1' ], [ 'c', '2' ], [ 'a', '5' ] ]\n\t\t\t.map( function( entry ) {\n\t\t\t\treturn entry.split( '=' );\n\t\t\t} )\n\t\t\t// [ [ 'a', '5' ], [ 'b, '1' ], [ 'c', '2' ] ]\n\t\t\t.sort( function( a, b ) {\n\t\t\t\treturn a[ 0 ].localeCompare( b[ 0 ] );\n\t\t\t} )\n\t\t\t// [ 'a=5', 'b=1', 'c=2' ]\n\t\t\t.map( function( pair ) {\n\t\t\t\treturn pair.join( '=' );\n\t\t\t} )\n\t\t\t// 'a=5&b=1&c=2'\n\t\t\t.join( '&' );\n\t}\n\n\tconst { parse = true } = options;\n\tif ( typeof options.path === 'string' ) {\n\t\tconst method = options.method || 'GET';\n\t\tconst path = getStablePath( options.path );\n\n\t\tif ( parse && 'GET' === method && preloadedData[ path ] ) {\n\t\t\treturn Promise.resolve( preloadedData[ path ].body );\n\t\t} else if ( 'OPTIONS' === method && preloadedData[ method ][ path ] ) {\n\t\t\treturn Promise.resolve( preloadedData[ method ][ path ] );\n\t\t}\n\t}\n\n\treturn next( options );\n};\n\nexport default createPreloadingMiddleware;\n"]}