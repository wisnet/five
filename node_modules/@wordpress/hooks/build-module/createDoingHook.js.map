{"version":3,"sources":["/Users/riad/Workspace/a8c/gutenberg/packages/hooks/src/createDoingHook.js"],"names":["createDoingHook","hooks","doingHook","hookName","__current","name"],"mappings":"AAAA;;;;;;;;;AASA,SAASA,eAAT,CAA0BC,KAA1B,EAAkC;AACjC;;;;;;;;AAQA,SAAO,SAASC,SAAT,CAAoBC,QAApB,EAA+B;AACrC;AACA,QAAK,gBAAgB,OAAOA,QAA5B,EAAuC;AACtC,aAAO,gBAAgB,OAAOF,KAAK,CAACG,SAAN,CAAiB,CAAjB,CAA9B;AACA,KAJoC,CAMrC;;;AACA,WAAOH,KAAK,CAACG,SAAN,CAAiB,CAAjB,IACND,QAAQ,KAAKF,KAAK,CAACG,SAAN,CAAiB,CAAjB,EAAqBC,IAD5B,GAEN,KAFD;AAGA,GAVD;AAWA;;AAED,eAAeL,eAAf","sourcesContent":["/**\n * Returns a function which, when invoked, will return whether a hook is\n * currently being executed.\n *\n * @param  {Object}   hooks Stored hooks, keyed by hook name.\n *\n * @return {Function}       Function that returns whether a hook is currently\n *                          being executed.\n */\nfunction createDoingHook( hooks ) {\n\t/**\n\t * Returns whether a hook is currently being executed.\n\t *\n\t * @param  {?string} hookName The name of the hook to check for.  If\n\t *                            omitted, will check for any hook being executed.\n\t *\n\t * @return {boolean}             Whether the hook is being executed.\n\t */\n\treturn function doingHook( hookName ) {\n\t\t// If the hookName was not passed, check for any current hook.\n\t\tif ( 'undefined' === typeof hookName ) {\n\t\t\treturn 'undefined' !== typeof hooks.__current[ 0 ];\n\t\t}\n\n\t\t// Return the __current hook.\n\t\treturn hooks.__current[ 0 ] ?\n\t\t\thookName === hooks.__current[ 0 ].name :\n\t\t\tfalse;\n\t};\n}\n\nexport default createDoingHook;\n"]}