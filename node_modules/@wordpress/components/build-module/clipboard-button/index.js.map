{"version":3,"sources":["/Users/riad/Workspace/a8c/gutenberg/packages/components/src/clipboard-button/index.js"],"names":["Clipboard","classnames","Component","IconButton","Button","ClipboardButton","arguments","bindContainer","bind","onCopy","getText","container","button","firstChild","clipboard","text","on","destroy","clearTimeout","onCopyTimeout","args","clearSelection","props","onFinishCopy","setTimeout","className","children","buttonProps","icon","classes","ComponentToUse","focusOnCopyEventTarget","event","target","focus"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport Clipboard from 'clipboard';\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport IconButton from '../icon-button';\nimport Button from '../button';\n\nclass ClipboardButton extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.bindContainer = this.bindContainer.bind( this );\n\t\tthis.onCopy = this.onCopy.bind( this );\n\t\tthis.getText = this.getText.bind( this );\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { container, getText, onCopy } = this;\n\t\tconst button = container.firstChild;\n\n\t\tthis.clipboard = new Clipboard( button,\t{\n\t\t\ttext: getText,\n\t\t\tcontainer,\n\t\t} );\n\n\t\tthis.clipboard.on( 'success', onCopy );\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.clipboard.destroy();\n\t\tdelete this.clipboard;\n\t\tclearTimeout( this.onCopyTimeout );\n\t}\n\n\tbindContainer( container ) {\n\t\tthis.container = container;\n\t}\n\n\tonCopy( args ) {\n\t\t// Clearing selection will move focus back to the triggering button,\n\t\t// ensuring that it is not reset to the body, and further that it is\n\t\t// kept within the rendered node.\n\t\targs.clearSelection();\n\n\t\tconst { onCopy, onFinishCopy } = this.props;\n\t\tif ( onCopy ) {\n\t\t\tonCopy();\n\t\t\t// For convenience and consistency, ClipboardButton offers to call\n\t\t\t// a secondary callback with delay. This is useful to reset\n\t\t\t// consumers' state, e.g. to revert a label from \"Copied\" to\n\t\t\t// \"Copy\".\n\t\t\tif ( onFinishCopy ) {\n\t\t\t\tclearTimeout( this.onCopyTimeout );\n\t\t\t\tthis.onCopyTimeout = setTimeout( onFinishCopy, 4000 );\n\t\t\t}\n\t\t}\n\t}\n\n\tgetText() {\n\t\tlet text = this.props.text;\n\t\tif ( 'function' === typeof text ) {\n\t\t\ttext = text();\n\t\t}\n\n\t\treturn text;\n\t}\n\n\trender() {\n\t\t// Disable reason: Exclude from spread props passed to Button\n\t\t// eslint-disable-next-line no-unused-vars\n\t\tconst { className, children, onCopy, onFinishCopy, text, ...buttonProps } = this.props;\n\t\tconst { icon } = buttonProps;\n\t\tconst classes = classnames( 'components-clipboard-button', className );\n\t\tconst ComponentToUse = icon ? IconButton : Button;\n\n\t\t// Workaround for inconsistent behavior in Safari, where <textarea> is not\n\t\t// the document.activeElement at the moment when the copy event fires.\n\t\t// This causes documentHasSelection() in the copy-handler component to\n\t\t// mistakenly override the ClipboardButton, and copy a serialized string\n\t\t// of the current block instead.\n\t\tconst focusOnCopyEventTarget = ( event ) => {\n\t\t\tevent.target.focus();\n\t\t};\n\n\t\treturn (\n\t\t\t<span ref={ this.bindContainer } onCopy={ focusOnCopyEventTarget }>\n\t\t\t\t<ComponentToUse { ...buttonProps } className={ classes }>\n\t\t\t\t\t{ children }\n\t\t\t\t</ComponentToUse>\n\t\t\t</span>\n\t\t);\n\t}\n}\n\nexport default ClipboardButton;\n"]}