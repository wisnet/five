{"version":3,"sources":["/Users/riad/Workspace/a8c/gutenberg/packages/blob/src/index.js"],"names":["window","URL","createObjectURL","revokeObjectURL","cache","createBlobURL","file","url","getBlobByURL","revokeBlobURL","isBlobURL","indexOf"],"mappings":";;;;;;;;;;AAAA;;;kBAG6CA,MAAM,CAACC,G;IAA5CC,e,eAAAA,e;IAAiBC,e,eAAAA,e;AAEzB,IAAMC,KAAK,GAAG,EAAd;AAEA;;;;;;;;AAOO,SAASC,aAAT,CAAwBC,IAAxB,EAA+B;AACrC,MAAMC,GAAG,GAAGL,eAAe,CAAEI,IAAF,CAA3B;AAEAF,EAAAA,KAAK,CAAEG,GAAF,CAAL,GAAeD,IAAf;AAEA,SAAOC,GAAP;AACA;AAED;;;;;;;;;;;AASO,SAASC,YAAT,CAAuBD,GAAvB,EAA6B;AACnC,SAAOH,KAAK,CAAEG,GAAF,CAAZ;AACA;AAED;;;;;;;AAKO,SAASE,aAAT,CAAwBF,GAAxB,EAA8B;AACpC,MAAKH,KAAK,CAAEG,GAAF,CAAV,EAAoB;AACnBJ,IAAAA,eAAe,CAAEI,GAAF,CAAf;AACA;;AAED,SAAOH,KAAK,CAAEG,GAAF,CAAZ;AACA;AAED;;;;;;;;;AAOO,SAASG,SAAT,CAAoBH,GAApB,EAA0B;AAChC,MAAK,CAAEA,GAAF,IAAS,CAAEA,GAAG,CAACI,OAApB,EAA8B;AAC7B,WAAO,KAAP;AACA;;AACD,SAAOJ,GAAG,CAACI,OAAJ,CAAa,OAAb,MAA2B,CAAlC;AACA","sourcesContent":["/**\n * Browser dependencies\n */\nconst { createObjectURL, revokeObjectURL } = window.URL;\n\nconst cache = {};\n\n/**\n * Create a blob URL from a file.\n *\n * @param {File} file The file to create a blob URL for.\n *\n * @return {string} The blob URL.\n */\nexport function createBlobURL( file ) {\n\tconst url = createObjectURL( file );\n\n\tcache[ url ] = file;\n\n\treturn url;\n}\n\n/**\n * Retrieve a file based on a blob URL. The file must have been created by\n * `createBlobURL` and not removed by `revokeBlobURL`, otherwise it will return\n * `undefined`.\n *\n * @param {string} url The blob URL.\n *\n * @return {?File} The file for the blob URL.\n */\nexport function getBlobByURL( url ) {\n\treturn cache[ url ];\n}\n\n/**\n * Remove the resource and file cache from memory.\n *\n * @param {string} url The blob URL.\n */\nexport function revokeBlobURL( url ) {\n\tif ( cache[ url ] ) {\n\t\trevokeObjectURL( url );\n\t}\n\n\tdelete cache[ url ];\n}\n\n/**\n * Check whether a url is a blob url.\n *\n * @param {string} url The URL.\n *\n * @return {boolean} Is the url a blob url?\n */\nexport function isBlobURL( url ) {\n\tif ( ! url || ! url.indexOf ) {\n\t\treturn false;\n\t}\n\treturn url.indexOf( 'blob:' ) === 0;\n}\n"]}