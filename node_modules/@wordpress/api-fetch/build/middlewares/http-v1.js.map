{"version":3,"sources":["/Users/riad/Workspace/a8c/gutenberg/packages/api-fetch/src/middlewares/http-v1.js"],"names":["OVERRIDE_METHODS","Set","DEFAULT_METHOD","httpV1Middleware","options","next","method","has","toUpperCase","headers"],"mappings":";;;;;;;;;;;AAAA;;;;;AAKA,IAAMA,gBAAgB,GAAG,IAAIC,GAAJ,CAAS,CACjC,OADiC,EAEjC,KAFiC,EAGjC,QAHiC,CAAT,CAAzB;AAMA;;;;;;;;;;;AAUA,IAAMC,cAAc,GAAG,KAAvB;AAEA;;;;;;;;;;AASA,SAASC,gBAAT,CAA2BC,OAA3B,EAAoCC,IAApC,EAA2C;AAAA,iBACND,OADM;AAAA,iCAClCE,MADkC;AAAA,MAClCA,MADkC,gCACzBJ,cADyB;;AAE1C,MAAKF,gBAAgB,CAACO,GAAjB,CAAsBD,MAAM,CAACE,WAAP,EAAtB,CAAL,EAAoD;AACnDJ,IAAAA,OAAO,mCACHA,OADG;AAENK,MAAAA,OAAO,kCACHL,OAAO,CAACK,OADL;AAEN,kCAA0BH,MAFpB;AAGN,wBAAgB;AAHV,QAFD;AAONA,MAAAA,MAAM,EAAE;AAPF,MAAP;AASA;;AAED,SAAOD,IAAI,CAAED,OAAF,EAAWC,IAAX,CAAX;AACA;;eAEcF,gB","sourcesContent":["/**\n * Set of HTTP methods which are eligible to be overridden.\n *\n * @type {Set}\n */\nconst OVERRIDE_METHODS = new Set( [\n\t'PATCH',\n\t'PUT',\n\t'DELETE',\n] );\n\n/**\n * Default request method.\n *\n * \"A request has an associated method (a method). Unless stated otherwise it\n * is `GET`.\"\n *\n * @see  https://fetch.spec.whatwg.org/#requests\n *\n * @type {string}\n */\nconst DEFAULT_METHOD = 'GET';\n\n/**\n * API Fetch middleware which overrides the request method for HTTP v1\n * compatibility leveraging the REST API X-HTTP-Method-Override header.\n *\n * @param {Object}   options Fetch options.\n * @param {Function} next    [description]\n *\n * @return {*} The evaluated result of the remaining middleware chain.\n */\nfunction httpV1Middleware( options, next ) {\n\tconst { method = DEFAULT_METHOD } = options;\n\tif ( OVERRIDE_METHODS.has( method.toUpperCase() ) ) {\n\t\toptions = {\n\t\t\t...options,\n\t\t\theaders: {\n\t\t\t\t...options.headers,\n\t\t\t\t'X-HTTP-Method-Override': method,\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tmethod: 'POST',\n\t\t};\n\t}\n\n\treturn next( options, next );\n}\n\nexport default httpV1Middleware;\n"]}